(name 'Prototype-Core-pmm.31' message 'Add mapping to Prototype''s PeriodicalExecuter- fixes #925' id 'd9729e27-e331-0d00-8e83-cf7a08033da6' date '10 September 2018' time '11:59:49.271527 am' author 'pmm' ancestors ((name 'Prototype-Core-pmm.30' message 'Update bundled Prototype to 1.7.3- fixes #1000' id '35a45bc0-cb31-0d00-9850-d9890bd00278' date '9 September 2018' time '8:04:32.592155 am' author 'pmm' ancestors ((name 'Prototype-Core-pmm.29' message '- lint fixes' id '7f757def-58fd-461d-b0e4-6e1e8e004566' date '19 August 2014' time '9:59:22 am' author 'pmm' ancestors ((name 'Prototype-Core-pmm.28' message '- Slime fixes, mostly recategorizations' id '2f35ad57-258e-46dc-9d98-8080dfc14ac9' date '3 September 2012' time '4:37:04 pm' author 'pmm' ancestors ((name 'Prototype-Core-pmm.27' message '- remove deprecated methods and classes' id '32bfd7f4-c562-4a64-99f1-2b845c851b4e' date '2 August 2011' time '9:18:47 pm' author 'pmm' ancestors ((name 'Prototype-Core-pmm.26' message '- remove deprecated methods and classes' id '98bf6c2b-4575-4902-aad3-04b036446aac' date '2 August 2011' time '9:02:05 pm' author 'pmm' ancestors ((name 'Prototype-Core-lr.25' message '- fixed invalid use of deprecated api' id '47121f3a-2de0-48f4-9173-bae178d7a5cf' date '25 July 2011' time '8:42:18 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.24' message '- updated to Prototype 1.7- updated to script.aculo.us 1.9' id '2886db4d-373d-42b7-a52f-78ff77aa5820' date '14 January 2011' time '8:48:16 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.23' message '- do not include fragment in AJAX request URLs' id '822f1e64-ca0c-49ff-9407-8e1e09dd4ec2' date '10 October 2010' time '5:39:38 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.22' message '- fixed naming on constructor method that caused a lint error on "on invalid object initiailization"' id '38cf7838-4210-424b-9c38-f4b4120dd53e' date '22 August 2010' time '3:14:06 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.21' message '- remove script generator, doesn''t seem to work because of Event.observe has totally different behavior for return values than a HTML event handler' id 'fd0af51c-daeb-4191-a74a-44eb0f2796a3' date '27 May 2010' time '9:26:14 pm' author 'lr' ancestors ((name 'Prototype-Core-obi.20' message '- avoid exception if no callback is used' id '8d8ee9fb-21e8-4f41-a9aa-0f99ea33bf53' date '22 May 2010' time '11:31:11 pm' author 'obi' ancestors ((name 'Prototype-Core-lr.19' message '- further cleaned up after Issue 521- tests should all pass again- added more comments- slightly refactored WADocuemnt and WARoot hierarchy to match the new functionality, this has to see rewrite soon anyway' id 'b613bffd-8dc3-4873-8e99-823bc05c4053' date '22 February 2010' time '11:05:06 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.18' message '- Issue 521:	Javascript onLoad functions (http://code.google.com/p/seaside/issues/detail?id=521)- extract the load scripts into a separate object WAScriptGenerator, this makes it possible	- dispatch event assignment and load scripts throught eh WAScriptGenerator	- PTScriptGenerator uses dom:loaded to execute scripts	- JQScriptGenerator uses the ready-function to execute scripts- the implementation is not as clean as I would like it to be, espcecially WAHtmlRoot is a mess and some code is still open for refactoring, but it is starting to look better- in rare cases this change might break existing code- two tests are broken' id '1ffeff40-7fb1-4c3b-aa4d-dfd3a2654500' date '21 February 2010' time '11:03:56 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.17' message '- added explicit repository url' id 'a13f5e22-27df-427f-9300-770e3b8f1d6d' date '17 February 2010' time '4:06:48 pm' author 'lr' ancestors ((name 'Prototype-Core-jf.16' message 'Bring WAUrl terminology in line with RFC 3986 (I got distracted on this while trying to work on fixing multiple fields with the same key).Leave old methods there marked as deprecated.' id '53d9c8b6-9fd2-49b4-8220-6bafc817707c' date '15 February 2010' time '2:49:26 am' author 'jf' ancestors ((name 'Prototype-Core-lr.15' message 'Prototype 1.6.1 * Avoid triggering a warning when Java is disabled in IE8. [#668 state:resolved] (orv, kangax, Andrew Dupont, Tobie Langel) * Simplify String#(un)escapeHTML and remove their DOM dependencies. (Tobie Langel) * Update UnittestJS. Modifiy test template accordingly. (Tobie Langel) * Remove redundant if statement in Element#readAttribute. (Tobie Langel) * Add missing semicolons. [#751 state:resolved] (Diego Perini) * Remove expensive (for such low-level method) internal `getClass` in favor of plain string comparison (kangax) * Fix `PeriodicalExecuter` so that it no longer suppresses exceptions. [#696 state:resolved] (Samuel Lebeau, Yaffle) * Fix issue related to escaping of selectors for querySelectorAll. [#559 state:resolved] (Jorn Holm) *1.6.1_rc3* (June 16, 2009) * Fixed a variety of non-ASCII chars and similar [#610 state:resolved] (T.J. Crowder) * Add Chrome 1+ to the list of supported browsers. (kangax) * Fix `Template#evaluate` "eating" previous character if `null` was returned from `toTemplateReplacements` function. (Nir, Jürgen Hörmann, kangax) * Make sure (deficient) APPLET, OBJECT and EMBED elements are extended with simulated methods in IE8. Return early if `_extendedByPrototype` is present on an element. (Tobie Langel, kangax) * Replace array creation and `Array#include` with a more efficient `RegExp#test`. (kangax) * Reorganize the way `ElementExtensions` are defined. Make sure elements used in SpecificElementExtensions are cleaned up. (kangax) * Make sure $A works with primitive values. (mr_justin, kangax) * Do not browser sniff when forking `unmark` function in selector suite. Instead use a proper test - PROPERTIES_ATTRIBUTES_MAP. (kangax) * Do not use short-hand element methods notation (@element.getStyle() -> Element.getStyle(@element)) for performance reasons. Do not use `$A` and `Array.prototype.shift` when `Array.prototype.slice` can be used instead. (kangax) * `Prototype.Browser.Opera` now uses stronger inference and is determined by [[Class]] of `window.opera` being - "Opera". (kangax) * Fix error in event.js which prevented attaching more than one responder for an event name/element combination. [#651 state:resolved] (Rob Lineweaver) * Do not sniff when testing for IE''s proprietary mouseenter/mouseleave events support. Use more robust inference instead. (kangax) * Use `Prototype.emptyFunction` consistently throughout unit tests. [#253 state:resolved] (Michael M Slusarz, John David Dalton, kangax) * deprecation extension: mark Array#reduce() as removed. [#569 state:resolved] (Tobie Langel) * `Form.serialize` now works safely with forms that have "length"-named elements. [#77 state:resolved] (Peter Adrianov, John-David Dalton, kangax) *1.6.1_rc1* (March 22, 2009) * `Element#update` now takes care of SCRIPT elements in IE. [#573 state:resolved] (Martin, Tobie Langel, kangax) * Remove unused local variables from `Element.extend`. Fix one of the form tests to remove `_extendedByPrototype` by setting it to `undefined` rather than `false` (`_extendedByPrototype` being `false` does not force `Element.extend` to re-extend element). (T.J. Crowder, kangax) * Make test for `escapeHTML`/`unescapeHTML` more strict. (Chrome 1.x escapes "<" and "&" with `innerHTML`, but not ">") (kangax) * Remove another sniffing from one of DOM tests. Fixes last IE8 failure. (kangax) * `Element.extend` now takes care of IE8 bug when HTMLAppletElement and HTMLObjectElement objects do not inherit from `Element.prototype`. (kangax) * Fix DOM tests to use proper feature test when testing `setOpacity` (kangax) * Fix another failure in IE8, `for`/`htmlFor` {get/set}Attribute translation. (kangax) * Fix `Element#writeAttribute` and `Element#readAttribute` failures in IE8 due to lack of proper feature testing. (kangax) * Remove sniffing from one of the DOM tests, which produced failures in IE8. (kangax) * Fix `Form.reset` test where `respondsTo` wouldn''t detect a method due to typeof returning "object" (rather than "function") in IE (kangax) * Remove Array#reduce which currently overrides native `reduce` in clients implementing JS1.8, e.g. Firefox 3+ (Tobie Langel, Andrew Dupont, kangax) * Make sure try/catch/finally is used instead of try/finally for clients without support for the latter one (e.g. Blackberry, IE) (Ville Koskinen, kangax) * Use `in` operator when accessing property of a nodelist to prevent Safari <=2.0.4 from crashing (kangax) * Add Element#clone as a safe wrapper of native `cloneNode`. (Andrew Dupont, kangax) * Add tests to ensure IE8 properly assigns a class name in the `Element` constructor. [#529 state:resolved] (Riki Fridrich, Andrew Dupont) * Remove sniffing from `Element` when detecting broken `setAttribute` in IE. [#571 state:resolved] (kangax) * Remove sniffing from `Element.update` branching in favor of feature detection. [#574 state:resolved] (kangax) * Remove sniffing when branching `escapeHTML` and `unescapeHTML`. [#570 state:resolved] (kangax) * Redefine Element#down in IE 6-7 to avoid extending all descendants when no selector is given. [#452 state:resolved] (eno, Andrew Dupont) * Reverse the definitions of Event#pointer(X|Y) and Event#pointer to prevent unnecessary computation. [#403 state:resolved] (Nick Stakenburg, Andrew Dupont) * Add first-class support for `mouseenter` and `mouseleave` events in non-IE browsers (IE supports them natively). [#350 state:resolved] (Nick Stakenburg, Andrew Dupont) * Make sure `_extendedByPrototype`, `_countedByPrototype`, and `prototypeUID` node expandos are accessed with `typeof` to prevent errors in some environments. [#354 state:resolved] (Hilberty, kangax, Andrew Dupont) * Fix issue where Opera 9.x returns incorrect results on certain Selector queries with descendant combinators. [#395 state:resolved] (Arpan, fearphage, kangax, Andrew Dupont) * Null out references to elements in cache on page unload. Need this in addition to the Event#stopObserving calls to clean up memory leaks. [#425 state:resolved] (ykphuah, mr_justin, Andrew Dupont) * Ensure `toString` and `valueOf` properties are copied to a subclass only when necessary in IE6. [#382 state:resolved] (Samuel Lebeau) * Make sure `getAttribute` is used without flag when accessing the "type" attribute of an iframe (IE throws error otherwise). [#118 state:resolved] (Zekid, kangax) * String#gsub should escape RegExp metacharacters when the first argument is a string. [#469 state:resolved] (michael, kangax) * Fix order of replacement in String#unescapeHTML [#544 state:resolved] (SWeini, kangax) * Fix issue where a Selector query rooted on a node that had not been attached to the document failed in IE. [#464 state:resolved] (jddalton, kangax, Douglas Fraser, Andrew Dupont) * Fix Selector to match elements with attributes containing hyphens. [#285 state:resolved] (leiyou, jddalton, kangax) * Make sure Form.reset always returns a reference to the receiver element. [#309 state:resolved] (Phil, kangax) * Escape ":" and "." characters when doing contextual CSS selection in browsers that support querySelectorAll. [#559 state:resolved] (fxtentacle, Andrew Dupont) * Ensure the `target` property on events is never undefined in IE. [#383 state:resolved] (Mathias Karstädt, Diego Perini, Andrew Dupont) * Ensure Element#descendants always returns an array. [#373 state:resolved] (kangax) * Don''t switch fixed position elements to absolute in Element.getDimensions [#543 state:resolved] (James Wheare) * Avoid infinite loops when calling String#sub with empty pattern [#534 state:resolved] (Samuel Lebeau) * Switch to Sprockets for building the Prototype distfiles. (sam) * Switch Object.is(Array|String|Number) to use the vastly-superior approach discovered by Juriy. (kangax) * Further fix to ensure Object.is(String|Number) do not throw exceptions on host objects in IE. (grepmaster, kangax, Tobie Langel, Andrew Dupont) * Ensure Enumerable#grep can handle strings with RegExp metacharacters. (Marton Kiss-Albert, kangax) * Switch to the "doScroll approach" for the dom:loaded custom event. (javier, Diego Perini, Nick Stakenburg, Andrew Dupont) * Optimize document.viewport.get(Dimensions|Width|Height). (Nick Stakenburg, Andrew Dupont) * Fix issue where Object#isString and Object#isNumber return false for String and Number "wrapper" objects. (atrepp, Samuel Lebeau, Andrew Dupont) * Set document.loaded = true before firing dom:loaded custom event. (Andrew Dupont) * Allow Element#store to accept an object containing several key/value pairs. (ZenCocoon, Andrew Dupont) * Change Element#store to return the element itself (for chaining). (Andrew Dupont) * Add non-bubbling custom events. A new final argument to Element#fire defaults to `true`; pass `false` to prevent bubbling when firing a custom event. (Andrew Dupont) * Alter event system to use new element storage API rather than have its own global hashtable. (Andrew Dupont) * Add Element#store and Element#retrieve for safe, hash-backed storage of element metadata (no memory leaks). Also add Element#getStorage for working with the element''s storage hash directly. Hat tip: Mootools. (ZenCocoon, Andrew Dupont) * Fix issue where certain versions of Safari treat class names case-insensitively in Selector/$$ queries. (Andrew Dupont, kangax, Brice) * Fix issue where Function#argumentNames returned incorrect results in IE when comments were intermixed with argument names. (Christophe Porteneuve, T.J. Crowder) * Selector.patterns should be represented as an ordered structure. (ADO, kangax) * Performance improvements in Function methods (Samuel Lebeau, kangax, jddalton, Tobie Langel).' id '90de383d-039a-41ef-9e4b-26b4ed9d9901' date '2 January 2010' time '4:34:52 pm' author 'lr' ancestors ((name 'Prototype-Core-jf.14' message 'correct #numArgs sender to #argumentCount' id '8806cb08-58db-4a45-9e26-e3d173e57b05' date '31 December 2009' time '11:24:47 am' author 'jf' ancestors ((name 'Prototype-Core-lr.13' message '- do not use any longer #printOn: and #printContentOn: in JSObject, but use #javascriptOn: and #javascriptContentOn:- implementors of external libraries that implment or send any of these methods need to perform the renaming as well' id '4cb27d68-357a-4ed7-8d71-ca727b73780b' date '24 December 2009' time '11:30:07 am' author 'lr' ancestors ((name 'Prototype-Core-jf.12' message 'Rename Seaside-Platform to Grease in order to help make clear that it is not Seaside-specific and can be used by other projects as a compatibility layer. This was spawned by discussions when I started porting Magritte to VAST using the Platform layer.' id '42610484-83e3-4bc3-a52b-5eee8ceb2d69' date '30 September 2009' time '10:48:56 pm' author 'jf' ancestors ((name 'Prototype-Core-jf.11' message 'Merge WAEntryPoint in WARequestHandler' id '180d1ed6-8c9e-45a9-95ab-a6f0e319be21' date '27 September 2009' time '10:05:09 pm' author 'jf' ancestors ((name 'Prototype-Core-lr.10' message '- fixed a series of bugs and other problems detected by lint' id '752ff53b-1db6-4bbd-8e75-045f7dd715e7' date '8 September 2009' time '7:53:12 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.9' message '- according to Julian it is "anHtmlRoot" and "aUrl", so made that consistent across the complete codebase- remove the #update*: methods from WAApplication' id '19e41111-bc79-4a15-ad13-9d87c5b7ad27' date '8 September 2009' time '12:59:10 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.8' message '- fixes issue 460 that caused #triggerForm: to be broken after the recent WAFormTag changes' id '94bfaefc-a635-42a6-9084-66cebe4aa433' date '8 September 2009' time '9:11:37 am' author 'lr' ancestors ((name 'Prototype-Core-yann_monclair.7' message 'http://code.google.com/p/seaside/issues/detail?id=215http://code.google.com/p/seaside/issues/detail?id=445Move #charSet up from WAApplication to WAEntryPoint. Update senders and configurations accordingly.' id '59609601-6997-3e46-b934-5e99a488a1c8' date '4 September 2009' time '5:49:26 pm' author 'yann.monclair' ancestors ((name 'Prototype-Core-jf.6' message 'Break some dependencies from JS stuff on the Canvas package: - Move javascript class extensions on WARenderCanvas up to WARenderer - replace references to WARenderCanvas with "WARenderer default"' id '40dd70c9-536e-463d-9665-54af494421f0' date '19 July 2009' time '6:57:33 pm' author 'jf' ancestors ((name 'Prototype-Core-jf.5' message 'refactor JSObject to store a RenderContext and a renderer class instead of a canvas' id 'f3a80f7c-e7b9-41b7-b501-05c6470cfab7' date '19 July 2009' time '6:04:41 pm' author 'jf' ancestors ((name 'Prototype-Core-lr.4' message '- added some missing code' id '5ea262b1-a61e-4e59-a3fd-e03fd3424120' date '30 June 2009' time '11:33:36 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.3' message '- fixed by moving some code to Scriptaculous-Core       Undeclared: #(#SUSortable)       Undeclared: #(#SUElement)' id '6218b13a-3c55-4690-9be9-bda16a0d4b54' date '30 June 2009' time '7:55:12 am' author 'lr' ancestors ((name 'Prototype-Core-lr.2' message '- cleanup PTElement- added some missing code' id '02db5c82-6494-49f3-9996-53944254e4e4' date '29 June 2009' time '9:32:55 pm' author 'lr' ancestors ((name 'Prototype-Core-lr.1' message '- split all prototype code into separate package, needs some addional testing and cleanup' id 'e6c3e987-bdbd-47e0-a1a4-171683dafade' date '29 June 2009' time '3:45:31 pm' author 'lr' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())