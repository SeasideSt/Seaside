(name 'Seaside-RenderLoop-pmm.101' message '- add class comments' id '1d14f717-0e32-0d00-84ed-1a0c0519768d' date '12 September 2018' time '3:13:30.238272 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.100' message 'Use script genereator from application- fixes #948' id '202514bf-e314-0d00-89f9-b00c05a73cf9' date '6 September 2017' time '11:31:33.138917 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.99' message '- empty merge commit' id '6cdd138f-4bb9-4657-9869-905e7952486b' date '12 July 2015' time '10:33:37 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.98' message '#820 Configurations should not hold on to classes' id 'dfd578b7-1c93-48cf-bbbe-512e7a729482' date '12 July 2015' time '10:09:36 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.97' message 'Issue 809: 	Use HTML 5 meta tag for charset- replace http-equiv with charset- make the content attribute in <meta> optional' id 'a542b24b-0bb1-4c69-95e6-172c50cb5fbf' date '16 August 2014' time '12:05:51 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.96' message '- fix comment' id '0dc6b9c0-3cfc-4c0d-b264-34e2383a1f41' date '1 February 2014' time '3:18:06 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-JohanBrichau.95' message 'Just a change to a comment: picked up more info in a gemstone-specific change in that comment and added it here' id '5fef875f-ede0-4610-aae0-8187a3d7d8e4' date '15 December 2013' time '5:28:17.63 pm' author 'JohanBrichau' ancestors ((name 'Seaside-RenderLoop-pmm.94' message '- spelling' id 'a9f7280f-14fc-4b98-a757-67617f20951a' date '14 September 2013' time '4:21:06 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-JohanBrichau.93' message 'Set html5 doctype as the default' id 'e6d7c566-a3c1-4b41-b811-a69802274edc' date '12 September 2013' time '2:17:46.253 pm' author 'JohanBrichau' ancestors ((name 'Seaside-RenderLoop-pmm.92' message 'Issue 747: 	Fix HTML 5 support- http://code.google.com/p/seaside/issues/detail?id=747- don''t do content-script-type and xml namespace for HTML5' id '4f833ea3-c335-4ab7-963b-d36d7cd83ac7' date '8 September 2013' time '4:55:21 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.91' message '- Slime fixes, mostly recategorizations' id '61964dcd-1b4a-4adf-bf20-ab210155056c' date '3 September 2012' time '4:40:11 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.90' message '- formatting Nazis from outer space' id '69cef792-c253-4ba9-9938-4ca435ae69bb' date '1 September 2012' time '5:15:50 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.89' message '- formatting Nazis from outer space' id 'f25dfb2d-1485-4a4c-b493-9545c5f6cae9' date '1 September 2012' time '11:30:10 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.88' message '- comment' id '11646390-58d9-4ce9-b467-727e90ab2190' date '1 September 2012' time '9:52:20 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-DenisDefreyne.87' message 'Issue 724:	add .pushState to ajaxifier' id 'a9eb0e27-43e2-4019-b21e-15a8c84a585d' date '31 August 2012' time '6:54:46 pm' author 'DenisDefreyne' ancestors ((name 'Seaside-RenderLoop-pmm.86' message '- add ability to override root component for session creation' id 'db856407-ba6d-4de4-bd25-c5dea49f08aa' date '29 August 2012' time '9:14:50 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.85' message '- formatting' id '1c294aa1-1122-4b47-98ed-ad235f596d53' date '26 August 2012' time '12:34:14 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.84' message '- Issue 732: 	Add flushing render phase continuation- http://code.google.com/p/seaside/issues/detail?id=732' id 'd5a51ff6-8bea-48b2-a3aa-138b52859af3' date '24 June 2012' time '12:17:09 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-jf.83' message 'http://code.google.com/p/seaside/issues/detail?id=713The circular dependency was introduced by Seaside-RenderLoop-pmm.78, Seaside-Session-pmm.160, and Seaside-Tools-Core-pmm.21.Revert those, and instead fix the failing tests in Seaside-Tests-Session by introducing a WANullSessionContinuation and making it the default. These tests should not be relying on renderloop behaviour in any case.The failing tests in Seaside-Tests-Tools-Web were fixed by adding a method to WAAdmin, allowing them to properly register an application through WAAdmin rather than duplicating (incorrectly) some of its functionality within the test.' id '752d3b57-ae30-436f-a0b5-f1259e437efd' date '13 March 2012' time '12:43:47 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-pmm.82' message '- fix build' id 'd44157ef-9726-4766-80d2-e629a491f12c' date '1 September 2011' time '9:31:58 am' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.81' message '- Issue 636: 	expected exception behavior WAWalkbackErrorHandler not portable (and not ANSI compliant)- nest exception handlers' id 'f2b2f214-b5fb-4700-9709-5aba36060b2d' date '29 August 2011' time '4:34:44 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.80' message '- Issue 111: 	jumpTo instance variable on WASession- move #jumpTo from session to action continuation' id 'bab8725c-fafe-417b-bb03-3bf4007d40f0' date '27 August 2011' time '5:38:08 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.79' message '- Issue 364: 	add always redirect option to WARegistry- add class comment to WAInitialRenderLoopContinuation' id '6eea6fa3-223e-4cf5-8922-759087544564' date '25 August 2011' time '5:00:14 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.78' message '- make tests pass' id 'f22b2bcd-7ec2-4ded-8983-84cfcd098cd6' date '25 August 2011' time '4:33:12 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-jf.77' message 'Issue 681: Get rid of WAMain and its subclasses by instead specifying an initial continuation for use by an application. The code from WARenderLoopMain was moved to a new class called WAInitialRenderLoopConfiguration.http://code.google.com/p/seaside/issues/detail?id=681' id 'b8af3942-d9de-4b99-abbc-9825a80af01a' date '24 August 2011' time '2:16:21 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.76' message 'Get rid of lazy initialization in session continuations.Also implement WARenderLoopMain>>#start using a WAPluggableActionContinuation  instead of duplicating the render continuation creation and state snapshotting code that is already contained in WAActionPhaseContinuation>>#continue.' id '9bea2ff3-2cc7-4bbf-a99f-924aa6b5a496' date '23 August 2011' time '4:38:54 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.75' message 'Make session continuations into request handlers. They basically were anyway, but this standardizes their protocol. It also has the benefit that they''ll end up in the handler stack, which means we can get at the current continuation, which I think will prove useful shortly...' id '73ba2f3d-80c2-4a95-803a-86dad714b6ce' date '23 August 2011' time '2:35:56 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.74' message 'Add a pluggable action phase continuation.This is useful to register for a URL that will be sent out by email or given to an external API as a callback point.' id '8d767523-331e-4b83-9070-ebb6dd67fd80' date '23 August 2011' time '12:10:03 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.73' message '- fixed formatting of return message' id '5d6ca1a2-5196-44f7-a61d-bd8a1b914d0f' date '25 July 2011' time '8:18:23 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.72' message '- Issue 521:	Javascript onLoad functions (http://code.google.com/p/seaside/issues/detail?id=521)- extract the load scripts into a separate object WAScriptGenerator, this makes it possible	- dispatch event assignment and load scripts throught eh WAScriptGenerator	- PTScriptGenerator uses dom:loaded to execute scripts	- JQScriptGenerator uses the ready-function to execute scripts- the implementation is not as clean as I would like it to be, espcecially WAHtmlRoot is a mess and some code is still open for refactoring, but it is starting to look better- in rare cases this change might break existing code- two tests are broken' id '3ae9f1ff-a046-4355-a1fd-599b602b97cd' date '21 February 2010' time '11:02:50 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.71' message '- added explicit repository url' id 'f25fb4e1-6243-453f-83a4-7b316850082c' date '17 February 2010' time '3:51:50 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.70' message 'merge' id '4674e5a6-d16a-45f7-9d6f-9bf0191ed0bf' date '29 December 2009' time '5:01:32 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.69' message '- move Task stuff into Component package- no longer need special Flow configuration settings- Make parameter to onAnswer: blocks optional- Add #call:onAnswer: which does a #show:onAnswer: and then sends a render notification; rewrite #call: to use #call:onAnswer:- Make as few of the functional tests as possible depend on Flow' id '17c322f5-b6eb-4c7e-8742-b1765dff0675' date '29 December 2009' time '4:07:58 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.68' message 'Rename Seaside-Platform to Grease in order to help make clear that it is not Seaside-specific and can be used by other projects as a compatibility layer. This was spawned by discussions when I started porting Magritte to VAST using the Platform layer.' id '0b388877-c890-49e0-be78-adfcba04261f' date '30 September 2009' time '10:53:31 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.67' message '- according to Julian it is "anHtmlRoot" and "aUrl", so made that consistent across the complete codebase- remove the #update*: methods from WAApplication' id 'c5ecf2d7-1086-4ac4-b32c-1d77310743a6' date '8 September 2009' time '1:03:51 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.66' message '- fixed typo: anHtmlRoot -> aHtmlRoot- made #updateRoot: in WAApplication and WASession empty again, but make sure they get called' id '68dbe2de-582e-45a8-8eb7-12b6aae13d8f' date '8 September 2009' time '10:36:35 am' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.65' message '- call #updateRoot: and #updateUrl: on WASession and WAApplication' id 'e8227ac1-7d34-4fad-8763-dce5c5d03f28' date '8 September 2009' time '10:27:08 am' author 'lr' ancestors ((name 'Seaside-RenderLoop-pmm.64' message '- Issue 437:	WASession >> #updateRoot: should do any HTML- http://code.google.com/p/seaside/issues/detail?id=437' id '5001e81e-e56f-411a-8c72-1dcde6abb002' date '30 August 2009' time '3:21:56 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-lr.63' message '- feed in the non-updated base url into the rendercontext' id 'f250490b-ab42-4cba-ac26-2478676f77db' date '9 March 2009' time '7:27:03 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.62' message '- don''t call #updateUrl: for callback URLs used in the rendering pass' id '9defb186-5b65-4870-9603-68548aae13ec' date '8 March 2009' time '10:58 am' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.61' message 'Some initial request implementations depend on having the root component already known so lets set it before doing the initial request pass.' id 'ae75a308-eb44-4303-9f5f-b1d51ffb3482' date '4 March 2009' time '3:56:47 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.60' message 'let''s stop pretending the Session has any configuration on it...' id '2761455e-6454-4bde-aec9-3a15538120c6' date '4 March 2009' time '9:58:16 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.59' message 'now that doing a #call: while rendering results in an error because the marker cannot be found, we no longer need to catch the render notification in the RenderPhaseContinuation' id 'e0504944-5fab-4312-80fb-8f33a45dcb24' date '27 February 2009' time '9:08:01 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.58' message 'Partially address http://code.google.com/p/seaside/issues/detail?id=215Remove dependency from WARenderContext>>absoluteUrlForResource: on WAApplication by adding resourceUrl instvar to the RenderContext (with tests).I''m actually not totally certain if the resourceUrl concept should just be thrown out but we can still do that later.' id '91ec7d99-f9bc-4bdb-90ae-8358c6b5f301' date '21 February 2009' time '7:06:21 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.57' message 'http://code.google.com/p/seaside/issues/detail?id=283Rename #possibleCauses to #seasidePossibleCauses' id '12ee8873-5979-4085-bf74-0cc2c3d8c581' date '20 February 2009' time '6:11:31 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.56' message '- replaced more #release with #destroy' id '76d0ebdc-2a34-4c8e-b3e8-e8f62826b2fe' date '20 February 2009' time '3:00:20 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.55' message 'get rid of #presenter method added to Session. We don''t want to encourage users to change the root presenter as its value is not backtracked.' id '063fe5c2-15e1-4d9b-b4bb-2748acd19fc9' date '20 February 2009' time '12:17:58 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.54' message 'Fix http://code.google.com/p/seaside/issues/detail?id=310Store the root component in the Session property dictionary rather than in the RenderLoopContinuation.This means we no longer need #inNewRenderLoopShow: and #inNewRenderLoopCall:. Instead you can just do "self session presenter show:"This has the additional benefit of making sure the old root component still gets snapshotted.' id 'cae886c5-8b99-4b61-81b1-18e96a92d61d' date '20 February 2009' time '12:12:59 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.53' message 'refactor methods a bit to make subclassing easier' id '1a7f2590-564a-4a75-881d-36d08cdbceb9' date '8 February 2009' time '2:58:38 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.52' message 'Get rid of WASessionConfiguration. It really makes no sense to have it separate from WAApplicationConfiguration (not sure what I was thinking) and there''s almost nothing left in there (and more probably to be removed shortly).You may want to run the following as I found some obsolete libraries lingering in my Application Defaults:WASharedConfiguration configurations do: [ :ea | WASharedConfiguration unregister: ea ]You also want to execute the following after loading (whether you run the above or not):WAAdmin clearConfigurationCachesWAAdmin reloadApplications' id '60191f53-0108-4522-bf35-aa28fb7bd495' date '30 January 2009' time '5:54:19 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.51' message 'move platform-specific part of Flow into a Platform method called #suspendCallbackDo: and resolve dependencies from other packages on WAContinuation to use it instead.There is one remaining test class in Seaside-Session that is still using WAContinuation directly (see http://code.google.com/p/seaside/issues/detail?id=309)' id '18e18479-7dcd-4a06-a196-96cdfcdfa7d9' date '27 January 2009' time '1:30:31 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.50' message 'Begin refactoring the Document hierarchy to make the RSS handler work again. This is still a work in progress but seems to be all working so it''s a good time to commit.I also ended up beginning to address http://code.google.com/p/seaside/issues/detail?id=287 because I ended up needing to do part of it just to make things work.' id '5ed0dea3-f28b-411f-b5b6-c96231335dbd' date '23 January 2009' time '3:32:01 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.49' message 'rename WARenderingContext to WARenderContext' id '229c5a67-dc63-42b0-b201-0da74c76603e' date '23 January 2009' time '12:09:32 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.48' message 'merged' id 'c2f7f900-0b17-430d-9176-bfe7bf02a94e' date '23 January 2009' time '7:53:52 am' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.47' message 'Move load script functionality from yucky implementation on RequestContext/RenderPhaseContinuation to HtmlDocument.This removed the need for yucky #rememberLoadScripts: method as well.I also fixed the two users of PrettyPrintedDocument (WAHalo and JQAllTests) so they work correctly.One RSS test is now failing because it was using HtmlDocument for XML and there is now Html-specific behaviour (scripts) on there. I think this finally requires introduction of a WADocument class. I''ll look at this next.There''s also one other issue remaining: the <script> block needs to *always* be output even if there are no load scripts and the RenderLoopContinuation is still attaching the "onload" attribute to the body.' id '95d71663-5336-4baa-b8bb-6c4edf970840' date '23 January 2009' time '3:48:31 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.46' message 'avoid restoring continuation state right after capturing it by providing a #basicValue method that is used by #value and also by new #captureAndInvoke' id '3eb1f409-7adf-4f51-be6a-632dce4e1756' date '21 January 2009' time '2:53:38 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.45' message 'rename WASessionContinuation>>updateStates to #captureStates. It isn''t supposed to be *updating* anything, just taking a full snapshot of everything that should be captured.' id '3c942290-6021-471d-a1d8-2dd430286f38' date '21 January 2009' time '10:05:12 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.44' message '- fixed (or at least changed) the ajax snapshot handling to something I believe is better' id '864e9d40-a676-48df-9b98-df4827c10ae3' date '19 January 2009' time '11:15:44 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.43' message 'fix a bug caused by the first continuation in the application not having state saved' id 'ab8b3de0-a759-4f88-8470-bfacf160f758' date '19 January 2009' time '10:11:50 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.42' message '- threw in a random #snapshotStates' id '29e32137-4b94-4036-8e70-2b1709633819' date '19 January 2009' time '7:20:56 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.41' message '- merged back into main trunk' id 'dc9abf56-5a68-4ad8-b3b8-9ecd9e6cc8e4' date '19 January 2009' time '6:01:17 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.response.40' message 'small refactoring' id '2a46197f-10c9-44af-9a5d-84c8ea4a34bf' date '18 January 2009' time '11:44:04 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.response.39' message 'some more cleanup' id '64abe53d-343d-4c70-bcd9-eb3480cf0714' date '18 January 2009' time '8:05:37 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.response.38' message 'clean up render continuation code a bit' id 'c29f96d7-758e-42a7-8281-999a2dc5531a' date '18 January 2009' time '7:47:05 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.response.37' message 'As discussed on the mailing list, stop saving state at the end of the render phase. Snapshotted state should only be modified during callback processing and this has always been the case.This halves the number of times we need to call #updateStates: on all the components.I still haven''t confirmed whether ajax callbacks should be doing "self states snapshot" or something like "states := self states copy snapshot; yourself" because JS code is still not working in this branch. The first will result in ajax callbacks modifying the (shared) state of the previous response continuation. This means that refreshing the page will reflect the new state which could be seen as a good thing but might result in weird behaviour since the next action callback would *also* share the same snapshot.' id '760c492b-0f3a-482b-87d2-3209f66e0149' date '18 January 2009' time '7:32:48 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.response.36' message 'some refactoring' id '3eb4e690-ddc5-4908-9308-a34b608002ca' date '17 January 2009' time '12:46:12 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.response.35' message 'clean up method ever so slightly - more to come' id '8c13f827-6678-4c82-b1a9-d175ba606dda' date '14 January 2009' time '9:47:47 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.response.34' message '- The response is set-up by the server adaptor and stored in the request context. Nobody is supposed to create new response objects. This should work for Swazoo and Kom, but not for the listener yet. A refactoring of WAResponse is still pending.- The request context is the only instance responsible to return a response factory (it asks the closes handler for one or provides the default one).- The implementation of the response factory changed slightly: Use something along "aRequestContext responseFactory notFound; return" to generate and return a response.- #handle: and #handleFiltered: do not return anything anymore, but throw WAResponseNotification to signal that they have generated a response. Use "aRequestContext return" to do that.- aRequestContext onRespond: aBlock does not exist anymore. Instead use an [ ... ] ensure: aBlock to define post response actions.' id '5bb262e3-a255-44fb-867d-f984983cc67a' date '12 January 2009' time '9:17:49 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.33' message 'The ''instance creation'' method category does not need a hyphen.Throughout Seaside (and Squeak, in general) we use a space in method categories when it is a phrase. For example:''error handling''''code generation''''user interface''''request handling''We use a hyphen only when we are providing additional refinement beyond a general descriptor or want several categories grouped together:''tags-lists'', ''tags-tables''''testing-script'', ''testing-navigation''''private-controlling'', ''private-testing''''form'', ''form-elements'', ''form-buttons''' id '8eecc5f0-19f6-486b-942d-f6bd133c82ef' date '12 January 2009' time '1:18:47 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.32' message '- renamed on WARequestHandler and WARequestFilter the methods #handleRequest: to #handle: and #responseForContext: to: #handleFiltered: (for the upcoming response refactoring)' id 'ce7de80d-7592-450f-8ced-2360840182ee' date '11 January 2009' time '9:43:58 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.31' message 'http://code.google.com/p/seaside/issues/detail?id=212Deprecate WASessionContinuation>>url and rename it to #registerForUrl' id '4c1bebde-b0b6-4a5b-b688-1c495c31e3da' date '11 January 2009' time '5:46 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-pmm.30' message '- switch to ANSI exceptions' id '23a7c6ea-29cc-483f-ae66-8ca47341dde4' date '10 January 2009' time '3:01:54 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-jf.29' message 'As discussed in http://code.google.com/p/seaside/issues/detail?id=266, add WAError and WANotification and make all our notifications and errors subclasses of those. Also implement WAObject>>error: to signal a WAError.' id '78cdb86e-9c40-4c0c-93ba-ee90d7dc3a17' date '5 January 2009' time '12:18:34 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.28' message '- added an advanced property to attributes' id '9aaffb76-1f31-4ced-958f-439a0f1cdf73' date '2 January 2009' time '9:18:46 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.27' message '- wrote tests for callbacks, and fixed some security issues discovered- cleaned up callbacks and callback handling' id '4d3c76b6-07fd-45b3-940e-8451b5b05093' date '28 December 2008' time '4:55:39 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-lr.26' message 'merged' id '8a5fc0c5-2cc8-4645-97f9-067bc4d7d826' date '7 December 2008' time '9:59:16 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jok.25' message 'update dependencies -- Seaside-Component required ' id '93e7957f-9dca-e94b-9304-57c803a9c08a' date '28 November 2008' time '3:59:06 pm' author 'jok' ancestors ((name 'Seaside-RenderLoop-pmm.24' message '- merged' id 'e78b99f1-a32c-47f8-b6c3-bc18a12a6d98' date '5 November 2008' time '2:16:26 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-pmm.22' message '- SLint fixes' id '4fec2618-032a-4541-94db-af73b8bf1ddb' date '5 November 2008' time '1:52:27 pm' author 'pmm' ancestors ((name 'Seaside-RenderLoop-jf.21' message 'signal a discriptive error when the render phase fails to generate a response. This avoids seing the server adaptor''s default error response when a nil response is generated.#possibleCauses is implemented to explain that the user is probably doing a #call: from a render method.Also add a functional test to allow us to test the behaviour of calling from within a render method.' id 'b4e7b093-228a-ee4f-8bf7-f252b0829645' date '28 October 2008' time '10:18:28 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.20' message 'http://code.google.com/p/seaside/issues/detail?id=213It was really annoying to have the Session automatically register itself in the Application. The caused weirdness when unregistering a session - the render phase would then cause the session to re-register itself under a new key.To fix this, WAApplication now registers the session when it is created and the session should not re-register itself.Added #keyFor:ifAbsent: and #urlFor:ifAbsent: as well as #keyFor: and #urlFor: which signal a WAUnregisteredHandlerError if the handler is not found. Change senders of #urlForRequestHandler:addHandlerField: and #ensureKeyForHandler: to use these new methods. The RenderLoopContinuations now catch this error and redirect to a new session. If you want to redirect somewhere else, you should call WARequestContext>>redirectTo: after unregistering the session.Also rename several methods on WARegistry to get a more consistent interface, both internally and with WADispatcher) and deprecate the old versions (plus changed senders).' id 'fa133e7f-fa04-094f-90fe-38fa600b747d' date '27 October 2008' time '5:45:39 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.19' message '- updating package information' id '71382587-a2ee-4f4b-9132-c612a45a787a' date '23 October 2008' time '10:08:28 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.18' message 'Added my best guess at package dependency information (please fill in descriptions)' id '7bee409f-d58a-4746-8618-a05f45c785f6' date '23 October 2008' time '12:38:16 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.17' message 'Further fix related to http://code.google.com/p/seaside/issues/detail?id=208I missed changing a sender of #value: to #value' id 'f41aa4fb-d302-9447-97a2-8d8e345aff6d' date '19 October 2008' time '2:37:20 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.16' message 'Seaside-RenderLoop-lr.14 should have removed WAResponseExpectedError as it was only used by the code that was removed.' id '8aa6fb3b-d589-b949-9c44-615d7a9441a6' date '19 October 2008' time '1:16:26 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.15' message 'http://code.google.com/p/seaside/issues/detail?id=208Change session continuations and sessions request handling methods so they use #currentRequest (most cases) or at least get passed a RequestContext instead of of a Request.Specifically:Change WAMain>>start: to #startChange WASession>>start: to #startChange WASession>>unknownRequest: to #unknownRequestMove WASession>>performRequest: code into #responseForContext:Change WASessionContinuation>>handleRequest: to #handleRequestChange WASessionContinuation>>value: to #value' id 'c249c4cc-6281-6941-9995-85c8318b26c6' date '19 October 2008' time '1:12:17 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.14' message '- this is not a good idea to raise ''XML HTTP requests must return a response during callback evaluation.'', because some AJAX requests might be full requests' id 'ee02b9c2-4b85-44a4-a5fc-78a4a7affae3' date '19 October 2008' time '9:53:22 am' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.13' message 'categorize methods' id 'e2b09d90-6627-8a42-b617-1a28ae9cab77' date '18 October 2008' time '11:26:18 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.12' message 'move WASessionContinuation from RenderLoop package into Session package' id 'c24aa1ef-e487-4546-8a93-b14237eb0b9a' date '18 October 2008' time '11:34:01 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.11' message 'promote render loop refactoring back into main branch' id 'a591f6ac-1848-c14d-9d66-62495beff498' date '18 October 2008' time '11:30:45 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.10' message 'Add #possibleCauses to WAResponseExpectedError' id '480e4606-182e-1a45-a6c0-ea844251aa2d' date '18 October 2008' time '11:08:27 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.9' message 'Have WAActionPhaseContinuation raise an error if an XMLHTTP request does not return a response during callback processing.' id 'ebdee121-5440-3640-be21-8b5f132c6abf' date '18 October 2008' time '11:05:23 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.8' message 'make render loop continuations configurable again' id 'ce9db749-02ff-d94b-ac99-28bef96cb7fd' date '17 October 2008' time '9:15:54 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.7' message 'remove WARenderLoop class.Add class extension methods to WASession: #inNewRenderLoopShow: and #inNewRenderLoopCall: to replace functionality provided by WARenderLoop>>call:The names of those methods kind of suck and I wonder if #inNewRenderLoopCall: should be added by the Environment package since it depends on WAComponent>>onAnswer: which is arguably binding the RenderLoop package too tightly to WAComponent.' id '237d762f-da3b-aa44-a0ac-d732d22c47c2' date '17 October 2008' time '8:53:44 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.6' message 'refactor "x not or: [y not]" into "(x and: [y]) not"' id 'd768c329-dfd4-654b-ba7d-a1739ccc3e08' date '16 October 2008' time '4:20:52 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.5' message 'empty log message' id '6423586e-c016-734a-a964-f0b6308d3a47' date '16 October 2008' time '4:00:28 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.4' message 'remove old continuations... it was getting way too hard to follow' id '591f466d-0973-a245-a8bd-cf91272be71f' date '16 October 2008' time '3:31:40 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.3' message 'renamed temp local for consistency' id '6765f605-a496-5440-9ec1-081ae9412e31' date '29 September 2008' time '1:22:13 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.2' message 'Implement two new continuations: WARenderPhaseContinuation and WAActionPhaseContinuation, which I think make the behaviour of WARenderLoopMain clearer and result in splitting the work more evenly between them.This split removes the weirdness where you use the same continuation twice (once with #run and once with #value:).WARenderLoopMain is modified to use the new continuations but the old ones have not been removed because there are still a few users of WARenderLoop.' id '5285e9e6-4edb-a34e-877d-b9de1f244e78' date '29 September 2008' time '1:12:40 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.refactored.1' message 'add WARenderLoopContinuation to hold the "root" instance variable so the WASessionContinuation abstract class can be used without the render loop.' id '57909626-f111-7e40-a4fc-3ede6e30af36' date '28 September 2008' time '11:10:42 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.10' message 'Move WASnapshot from RenderLoop to Session package.It is part of the session state saving mechanism and is expected to be passed into #updateStates: on WASession. It would be required if you were implementing another subclass of WAMain to use the session without a render loop.' id '2275b29f-9bf0-2f47-9393-ec862a8fefcd' date '28 September 2008' time '10:37:38 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.9' message 'Move callback processing logic from WARenderContinuation to WACallbackRegistry so it can be used without the RenderLoop' id '8a297231-2d90-9046-9e49-f21b5bc6e397' date '28 September 2008' time '10:04:41 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.8' message 'Remove methods for signalling an error when callbacks could be processed due to components missing in the tree. Since http://code.google.com/p/seaside/issues/detail?id=158 was completed, callbacks are not executed through the tree and so these methods are never called anymore.' id 'f3ea09d9-e048-194f-afd7-74d4caf34fda' date '28 September 2008' time '9:30:31 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.7' message 'There doesn''t seem to be any need to store the session in WARenderContext anymore and none of our code calls #session on that class anywhere.Remove the instance variable and deprecate the accessor methods.' id 'ab23fce5-d5f9-2c4a-9a5d-933e85ae17d7' date '28 September 2008' time '5:31:19 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.6' message 'Change WARequest>>url to return the complete URL from the original request. This required adding WAUrl>>decodeWith: to do decoding of most elements in the WAUrl.Also adjusted a bunch of users of #urlSee http://code.google.com/p/seaside/issues/detail?id=154' id '38409c39-bf60-654a-b040-0a36a4f2a23f' date '23 September 2008' time '12:06:39 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.5' message 'merged' id '4dfa5e62-af94-4916-8012-8c7377a88dba' date '14 September 2008' time '4:38:55 pm' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.4' message 'Clean up error handling:+ Remove WADefaultErrorHandler and WASimpleErrorHandler+ Make WAErrorHandler always output a very simple text/plain error message as a failsafe+ Add #handleDefault: to WAErrorHandler and have both #handleError: and #handleWarning: call it so behaviour can be easily specified for both of them in one location+ remove WAReponse class>>internalError:''s dependency on WACanvas+ Make sure that all error handlers ALWAYS ALWAYS ALWAYS return a response+ Delete WAPageExpired since it was poorly named for what it did and was only used when a user tried to proceed on a non-resumable exception. This case is now handled by returning an internal error response.+ Make WAWalkbackErrorHandler a subclass of WADebugErrorHandlerRemaining issue is that when you close the debugger, a nil response is returned. WAKom handles this by displaying a message saying the page is expired but this would be better handled by catching somewhere and then returning a response with an explanation.' id 'f35a0ad0-12b0-f24e-8b1a-c21443db86eb' date '14 September 2008' time '3:52:07 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.3' message '- callbacks are processed outside the components now- callbacks require much less memory now' id 'b184d695-fa59-4c3a-8981-385591ad1e80' date '14 September 2008' time '10:44:41 am' author 'lr' ancestors ((name 'Seaside-RenderLoop-jf.2' message 'Remove #decorationClasses configuration attributeThe only demaining decoration that makes sense to add generically or at the root level is the ToolDecoration and I''m not altogether convinced that couldn''t be implemented as a filter. And in any case, we can just add a configuration option specifically for the tool decoration.' id 'cc4bf173-9ef2-4f4c-b87f-430d12ed5e65' date '13 September 2008' time '10:15:51 am' author 'jf' ancestors ((name 'Seaside-RenderLoop-lr.1' message 'move render loop code out of Seaside-Core and into its own packageDelete obsolete WAAuthMain (no longer needed now that WAAuthenticationFilter exists instead of WABasicAuthentication, which was a decoration)Move WAAuthConfiguration in Seaside-Core-Filters, since that is where it is now used and remove its dependency on WARenderLoopConfiguration.' id 'aaef530e-abfb-4742-9fe9-037afc46d279' date '12 September 2008' time '8:38:58 pm' author 'lr' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-RenderLoop-lr.4' message '- added a #rootDecorationClasses configuration' id '98c0f481-38f3-4859-a2b8-7bbb1975746f' date '14 September 2008' time '1:42:13 pm' author 'lr' ancestors ((id 'b184d695-fa59-4c3a-8981-385591ad1e80')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ((name 'Seaside-RenderLoop-jf.3' message 'Implement two new continuations: WARenderPhaseContinuation and WAActionPhaseContinuation, which I think make the behaviour of WARenderLoopMain clearer and result in splitting the work more evenly between them.This split removes the weirdness where you use the same continuation twice (once with #run and once with #value:).WARenderLoopMain is modified to use the new continuations but the old ones have not been removed because there are still a few users of WARenderLoop.' id 'af09044f-cd33-8e40-84a5-ffa3b7767766' date '29 September 2008' time '1:11:57 am' author 'jf' ancestors ((id '57909626-f111-7e40-a4fc-3ede6e30af36')) stepChildren ())))) stepChildren ())) stepChildren ())) stepChildren ((name 'Seaside-RenderLoop-jf.5' message 'Fix snapshotting bug... I wasn''t yet passing the WASnapshot on to the next continuation to be restored so backtracking wasn''t working right.' id '127683fc-57b2-9d4d-9f17-d8d319159f82' date '16 October 2008' time '3:55:27 pm' author 'jf' ancestors ((id '591f466d-0973-a245-a8bd-cf91272be71f')) stepChildren ())))) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-RenderLoop-jf.23' message 'Merge in the painterrenderer branch' id '1ea9d6f4-5a5b-0a4c-b62a-b6c513252528' date '3 November 2008' time '10:21:55 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.22' message 'http://code.google.com/p/seaside/issues/detail?id=229When WAActionPhaseContinuation redirected to the render continuation, this was not wrapped with a handler for WAUnregisteredHandlerError. If a callback expired the session and then immediately triggered a render notification we would end up seeing that error when trying to get the URL for the new Continuation.So we now add the handler in WASessionContinuation>>value and have it wrap the entired #handleRequest call.Also renamed the methods that add the exception handlers to end with "Do:"' id 'dc96554d-316c-1b4b-b5bb-5c3c9860bfef' date '3 November 2008' time '8:34:28 am' author 'jf' ancestors ((id 'b4e7b093-228a-ee4f-8bf7-f252b0829645')) stepChildren ())(name 'Seaside-RenderLoop-jf.painterrenderer.5' message 'minor refactoring' id '6964d37c-a699-9e4b-adb4-00097e261225' date '3 November 2008' time '8:44:26 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.painterrenderer.4' message 'WATreeRenderContext was removed. Set up the context in WARenderPhaseContinuation>>newContext instead.Also change to use new instance creation methods for visitors.' id 'f92e1ac7-68b3-6640-93a8-dd1480aa8e5a' date '3 November 2008' time '4:32:04 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.painterrenderer.3' message 'implement a Guide pattern for walking the component tree where one guide visitor leads the way through the tree and its client does the actions on each item.' id '978ceb84-281c-9c44-80cd-69257781164f' date '22 October 2008' time '4:18:42 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.painterrenderer.2' message 'change the continuations to use the new painter/component visitors' id '4dcb7209-f17c-8443-a7ef-857928cf6031' date '22 October 2008' time '1:45:10 pm' author 'jf' ancestors ((name 'Seaside-RenderLoop-jf.painterrenderer.1' message 'change to use #outermost instead of #decorationChainDo:' id 'cff2b910-1c99-3743-ad90-fb79bce01c7b' date '22 October 2008' time '12:00:17 am' author 'jf' ancestors ((id 'f41aa4fb-d302-9447-97a2-8d8e345aff6d')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-RenderLoop-lr.25' message '- cleanup of method protocols- fixed inconsistencies' id '272b3b00-8af7-4bf3-b342-7c33114a9239' date '29 November 2008' time '2:13:30 pm' author 'lr' ancestors ((id 'e78b99f1-a32c-47f8-b6c3-bc18a12a6d98')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-RenderLoop-lr.47' message '- set content type in render loop' id 'f455f63b-2b1d-49a1-90e1-ac48589e4546' date '22 January 2009' time '10:33:10 pm' author 'lr' ancestors ((id '3eb1f409-7adf-4f51-be6a-632dce4e1756')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-RenderLoop-lr.69' message '- do not use any longer #printOn: and #printContentOn: in JSObject, but use #javascriptOn: and #javascriptContentOn:- implementors of external libraries that implment or send any of these methods need to perform the renaming as well' id 'c47d9032-f8ea-4ad9-86b8-3317c0048b15' date '24 December 2009' time '11:25:41 am' author 'lr' ancestors ((id '0b388877-c890-49e0-be78-adfcba04261f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-RenderLoop-JohanBrichau.98' message 'Adapted comment referring to ANSI exception handling' id 'd294dea6-dba9-43aa-a935-1e1cce0c75bc' date '19 April 2015' time '8:36:04.825283 am' author 'JohanBrichau' ancestors ((id 'a542b24b-0bb1-4c69-95e6-172c50cb5fbf')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())