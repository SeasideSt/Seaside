(name 'Seaside-Tests-UTF8-pmm.17' message 'Sanitize cookie path- fixes #917' id 'ae88a5df-e831-0d00-96e4-a07f0886cf05' date '10 September 2018' time '6:49:11.580128 pm' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.16' message '- lint fixes' id '78c67bd5-7341-4d54-bd03-9c6a9498939b' date '18 August 2014' time '4:37:34 pm' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.15' message 'Issue 787: 	WAUrl relies on not portable Stream semantics- more optimizations- more comments- tests for more edge cases' id 'cc2cebb1-728c-4922-8601-c40529eeb25c' date '18 April 2014' time '1:27:36 pm' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.14' message '- Slime' id '87a9bb09-ef53-41cb-b816-bff70721ab79' date '14 September 2013' time '9:15:57 am' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.13' message 'Issue 749: 	Wrong handling of urls encoded in UTF8http://code.google.com/p/seaside/issues/detail?id=749' id '4aca0e07-c2fc-41bb-a98f-bd45c9488c86' date '8 September 2013' time '4:32:03 pm' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.12' message '- Issue 676: 	response generators have to reset the response before generating a new one- add infrastructure to reset streams, work around Pharo stream bugs' id '949744cd-98c9-40df-9cf8-97cea70da8c1' date '26 August 2011' time '10:02:51 am' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.11' message '- remove deprecated methods and classes' id 'e6ed9a0e-404a-431a-b7d6-b33b95d34c89' date '2 August 2011' time '9:12:59 pm' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-lr.10' message '- fixed formatting of return message' id 'e5201186-3019-4149-b2e1-53e3c90e4654' date '25 July 2011' time '8:23:25 pm' author 'lr' ancestors ((name 'Seaside-Tests-UTF8-lr.9' message '- renamed all #testing protocols in TestCase classes with test methods to #tests or #tests-*, as discussed in the mailing list:	#testing is for predicate methods, not unit tests. I''ve been moving them to #tests or #tests-* gradually but it might be good to do a sweeping change if others agree with me.' id 'bb359847-0bcb-467d-b95c-53c3f529d1c2' date '30 March 2010' time '9:01:47 am' author 'lr' ancestors ((name 'Seaside-Tests-UTF8-lr.8' message '- added explicit repository url' id '22c8fa19-7e04-4864-b92e-ab3a12f22df0' date '17 February 2010' time '4:05:05 pm' author 'lr' ancestors ((name 'Seaside-Tests-UTF8-pmm.7' message '- tests for new #contentsXXX protocol on WAFile- answer nil if a mime type has no character set instead of signaling an exception' id '844f780c-aec1-499d-8fab-dfd40db93ed9' date '15 November 2009' time '11:11:17 am' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-dkh.6' message '- fix bug http://code.google.com/p/seaside/issues/detail?id=488' id 'cb90fa27-5c00-4a7a-899f-ffd98c5a4db0' date '13 November 2009' time '3:48:28 pm' author 'dkh' ancestors ((name 'Seaside-Tests-UTF8-jf.5' message 'Rename Seaside-Platform to Grease in order to help make clear that it is not Seaside-specific and can be used by other projects as a compatibility layer. This was spawned by discussions when I started porting Magritte to VAST using the Platform layer.' id '5727ea6e-7ef0-4cf3-8bb6-7ff053bc467c' date '30 September 2009' time '10:56:17 pm' author 'jf' ancestors ((name 'Seaside-Tests-UTF8-jok.4' message 'String crlf is not ANSI' id '6b5d5d0a-4413-2447-9c06-d9af4095ba41' date '19 September 2009' time '10:30:56 am' author 'jok' ancestors ((name 'Seaside-Tests-UTF8-lr.3' message '- replaced sends to "Character class>>#value:" with ANSI compatible "Character class>>#codePoint:"' id '1d8b71f5-a6c5-456e-8a21-985e224b6dd8' date '16 July 2009' time '9:06:34 am' author 'lr' ancestors ((name 'Seaside-Tests-UTF8-pmm.2' message '- utf-8 url encoding test' id 'd2fa5643-e20d-445f-9f90-06ae8c3c2c1a' date '5 July 2009' time '8:16:53 pm' author 'pmm' ancestors ((name 'Seaside-Tests-UTF8-pmm.1' message '- move utf-8 tests to custom package' id 'd022e499-f381-430b-be27-8c781954d809' date '5 July 2009' time '1:08 pm' author 'pmm' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())