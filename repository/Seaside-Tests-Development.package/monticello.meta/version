(name 'Seaside-Tests-Development-pmm.46' message 'Use HTML style rendering for booleans- #823' id '02ed510f-2315-0d00-839e-40a2053e7f63' date '9 September 2017' time '3:03:42.304752 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-pmm.45' message '- Slime fixes, mostly recategorizations' id 'b08b3d36-66ea-4884-9355-28bc7307c1ae' date '3 September 2012' time '4:39:41 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-pmm.44' message '- Issue 712:	Pretty printing is broken for JavaScript expressions- http://code.google.com/p/seaside/issues/detail?id=712' id '0328104d-6d68-438b-95dc-03c1c040a1c8' date '19 February 2012' time '4:24:08 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-pmm.43' message '- Issue 672:	SequenceableCollection>>#endsWith: is not portable' id '7e69ccba-9e6f-4ea7-8e04-e38d3d529448' date '5 August 2011' time '11:23:28 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-lr.42' message '- fixed spacing in blocks' id 'a3d930a0-61e1-4f0a-a8d1-498cebceb3fa' date '25 July 2011' time '7:19:11 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-pmm.41' message '- Seaside-Tests-Development-pmm.40 with new UUID- Issue 642: 	WATagBrush and WAPrettyPrintedDocument inconsistencies- http://code.google.com/p/seaside/issues/detail?id=642' id '4df65537-18c5-44e1-9ba7-c0ce2cd2f503' date '23 July 2011' time '8:21:01 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-pmm.38' message '- test space rendering as well' id 'c1977b30-83e8-4520-b9fc-8da68653209a' date '18 February 2011' time '9:54:49 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-pmm.37' message '- Issue 641: 	Halo source view incorrectly displaying entity characters- http://code.google.com/p/seaside/issues/detail?id=641' id '9e31db30-dd78-4b0d-8015-7726d10f4138' date '9 February 2011' time '9:50:39 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-pmm.36' message '- simple unit test for WAPrettyPrintedDocument that should detect future breakage like the one fixed by Seaside-Development-lr.141' id '288daaf1-b73d-41fd-9577-125a1baf1885' date '30 January 2011' time '11:52:31 am' author 'pmm' ancestors ((name 'Seaside-Tests-Development-lr.35' message '- renamed all #testing protocols in TestCase classes with test methods to #tests or #tests-*, as discussed in the mailing list:	#testing is for predicate methods, not unit tests. I''ve been moving them to #tests or #tests-* gradually but it might be good to do a sweeping change if others agree with me.' id 'db05540f-1d82-46fd-a6d5-46fceb5d5659' date '30 March 2010' time '9:02:59 am' author 'lr' ancestors ((name 'Seaside-Tests-Development-lr.34' message '- added explicit repository url' id 'aab5686b-0833-4065-b540-d5a27dc633c5' date '17 February 2010' time '3:52:58 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-lr.33' message '- do not use any longer #printOn: and #printContentOn: in JSObject, but use #javascriptOn: and #javascriptContentOn:- implementors of external libraries that implment or send any of these methods need to perform the renaming as well' id '9d147d98-a9f3-44ec-9ff5-de7b972294ed' date '24 December 2009' time '11:26:36 am' author 'lr' ancestors ((name 'Seaside-Tests-Development-jf.32' message 'Rename Seaside-Platform to Grease in order to help make clear that it is not Seaside-specific and can be used by other projects as a compatibility layer. This was spawned by discussions when I started porting Magritte to VAST using the Platform layer.' id '6bb18c57-4a30-4993-a3d4-2da4c22d8f02' date '30 September 2009' time '10:54:26 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.31' message 'rename Seaside-Tests-WebTools to Seaside-Tests-Tools-Web' id '5b7ca95c-cd20-4df8-9f49-fd8d691a016b' date '14 March 2009' time '11:27:30 am' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.30' message 'a few lint fixes' id '19db2a50-059e-430d-871e-0517b7d0d365' date '14 March 2009' time '1:39:29 am' author 'jf' ancestors ((name 'Seaside-Tests-Development-lr.29' message '- droped WADevelopmentFilesTest>>#testDevelopmentFilenames (it seems useless to me to assert the presence of particular files in there, the basic functionality is already tested in WAFileLibraryTest)' id '78f6ee63-ef86-4b78-8bfa-bedfa3998fdb' date '9 March 2009' time '6:46:27 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-jf.28' message 'Adjusted tests to work with Seaside-Development-jf.97' id 'fb8f9398-f735-4279-8816-18d36c30b055' date '4 March 2009' time '9:45:03 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.27' message 'http://code.google.com/p/seaside/issues/detail?id=221Move WAInspector and WAInspectorPlugin into the platform-generic development package and implement a Squeak-specific subclass in the Squeak package.' id 'edef07fe-efee-4700-bddd-a4424c7d43f8' date '3 March 2009' time '10:42:46 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.26' message 'http://code.google.com/p/seaside/issues/detail?id=221Move WAWalkback to non-platform-specific package, make it abstract and portable, and implement WASqueakWalkback subclass.Also added a test of one of the two subclass responsibility methods. It''s easy to test and will at least confirm that the platform has created and registered a subclass.' id 'f0a1a849-821c-42a9-a885-7af27899eb0e' date '21 February 2009' time '12:09:49 am' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.25' message 'http://code.google.com/p/seaside/issues/detail?id=164Put test for platform #garbageCollect method in Seaside-Tests-Development' id '6a66a6b8-4aeb-485e-95a7-d515ef40b461' date '23 January 2009' time '8:10 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.24' message 'As debated at the Konstanz sprint and touched upon in http://code.google.com/p/seaside/issues/detail?id=221, move Platform methods to instance side and implement WASqueakPlatform as a subclass of WAPlatform.This allows us to provide default implementations where possible, helps document which methods are required, and means that we have a class as our global instead of the un-namespace "SeasidePlatformSupport".In case it is useful, the refactoring code was:"The refactoring:"WASqueakPlatform class selectors do: [ :ea |	(ORSwapMethodRefactoring		swapMethod: ea		in: WASqueakPlatform class) execute ]"The renaming:"(ORSourceRegexRefactoring new	replace: ''SeasidePlatformSupport'' with: ''WAPlatform current'';	yourself) execute' id '49db8892-ea78-4b7b-b53f-b9b27d6bf7f8' date '22 January 2009' time '3:01:29 am' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.23' message 'http://code.google.com/p/seaside/issues/detail?id=220Add new packages:* Seaside-WebTools* Seaside-Squeak-WebTools* Seaside-Tests-WebToolsMove non-development tools from Seaside-Development, Seaside-Squeak-Development, and Seaside-Tests-Development into these packages.' id '16457d80-7bbd-4944-8c99-8cc893263431' date '11 January 2009' time '2:39:05 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-pmm.22' message '- fixed test' id 'c95adc28-fa50-4dda-af6d-6b156d585a6e' date '10 January 2009' time '3:06:23 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-jf.21' message 'Fix failing #testDevelopmentFilenames since a new png was added and not added to the test.' id 'bec08021-3ffb-43c4-b00d-fc2fa544fb40' date '5 January 2009' time '9:19:47 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-lr.20' message '- wrote tests for callbacks, and fixed some security issues discovered- cleaned up callbacks and callback handling' id 'f0fe8c26-644e-4282-af74-fc494837020a' date '28 December 2008' time '4:57:20 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-lr.19' message '- renamed misspelled inst-var names' id '754cc4e2-05b4-403c-922b-6855cd437962' date '5 December 2008' time '3:15:13 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-lr.18' message '- cleanup of method protocols- fixed inconsistencies' id '17dd4aa7-d14f-4765-89cd-cb6f04ef8a1d' date '29 November 2008' time '2:14:43 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-lr.17' message '- made an inst-var a temp-var' id 'e209fdd0-28c4-49e0-b266-788d99bd5a61' date '11 November 2008' time '11:36:49 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-pmm.16' message '- SLint fixes' id '34b04f40-64f3-4b7b-afae-69785e1f4b20' date '5 November 2008' time '1:55:51 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-jf.15' message 'http://code.google.com/p/seaside/issues/detail?id=213It was really annoying to have the Session automatically register itself in the Application. The caused weirdness when unregistering a session - the render phase would then cause the session to re-register itself under a new key.To fix this, WAApplication now registers the session when it is created and the session should not re-register itself.Added #keyFor:ifAbsent: and #urlFor:ifAbsent: as well as #keyFor: and #urlFor: which signal a WAUnregisteredHandlerError if the handler is not found. Change senders of #urlForRequestHandler:addHandlerField: and #ensureKeyForHandler: to use these new methods. The RenderLoopContinuations now catch this error and redirect to a new session. If you want to redirect somewhere else, you should call WARequestContext>>redirectTo: after unregistering the session.Also rename several methods on WARegistry to get a more consistent interface, both internally and with WADispatcher) and deprecate the old versions (plus changed senders).' id '7dea5c32-032b-d442-8e56-9c8ac4015e68' date '27 October 2008' time '5:45:44 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.14' message 'Resolve http://code.google.com/p/seaside/issues/detail?id=180 by renaming registration methods' id 'ac0de74a-7de9-9f42-ac69-5d992554b51a' date '26 October 2008' time '12:29:52 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-lr.13' message '- updating package information' id 'a1202bf2-1707-4fa6-a8c2-992db0507eb2' date '23 October 2008' time '10:10:02 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-jf.12' message 'Added my best guess at package dependency information (please fill in descriptions)' id '7bafe087-b352-b749-a84b-d9830af292de' date '23 October 2008' time '12:38:20 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-lr.11' message '- removes unused vars' id '8c4fd227-650d-4ecb-ad98-b7119acfc9ce' date '18 October 2008' time '9:00:32 pm' author 'lr' ancestors ((name 'Seaside-Tests-Development-jf.10' message 'fix WADispatcherComponentTest>>testChildApplicationIt was triggering code that was doing a #call: and not catching the WARenderNotification, which was now raising a WAUnhandledNotificationError' id '848b61df-53ed-f745-9638-78ee1a2d74ab' date '18 October 2008' time '12:39:14 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-obi.9' message '- added #toolsCSS to testDevelopmentFilenames' id '0bf223ac-0698-f846-a5f9-475862d3cf6e' date '12 October 2008' time '7:40:17 pm' author 'obi' ancestors ((name 'Seaside-Tests-Development-jf.8' message 'Implement #cloneHandler on the RequestHandler hierarchy and use it in WACopyDispatcherPlugin.For most request handlers we just want to #copy, but for Applications we want to make sure we then clear the cache. Otherwise we''d have a copy that had all the same sessions in it. Eww...This was based on my assumption that in the general case of WAEntryPoint, we don''t necessarily want to clear the cache in #postCopy. Somebody might have an EntryPoint subclass that they want to copy in some context and still have the registered request handlers in the cache. If this assumption is wrong, WAEntryPoint>>postCopy could be adjusted and this version reverted.' id '2aa05f92-d248-694f-8765-50b9dbecb6cb' date '7 October 2008' time '2:05:32 am' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.7' message 'Move test of WADevelopmentFiles into a new test case in the Seaside-Tests-Development package (since the class it is testing is in Seaside-Development)' id 'ea53c90b-6708-4c48-9108-4fa55ebf9e24' date '6 October 2008' time '5:41:38 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.6' message 'Push #requestContextWithUrl: up to WAContextTestCase since it was already implemented on 3 subclasses and was now needed on a fourth.' id '8ad9906b-bba6-1a48-9a5b-7081453c525e' date '6 October 2008' time '3:01:13 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.5' message 'Move WAInspectorTest to Seaside-Tests-Squeak-Development since WAInspect was moved into the Squeak-specific development package.' id 'ec1cefa3-e9bc-1941-8401-7109fed8f7c0' date '6 October 2008' time '2:34:48 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.4' message 'Move "parent" instvar of WARequestHandler to WAEntryPoint.The instvar used to server double purpose as both the static parent of an entry point (set at registration time) and as a sort of request handler context stack (set during request handling on some error handlers). With the handler stack in WARequestContext that latter use is no longer required and the duality is confusing.This moves the instvar down to WAEntryPoint, where it is always a static parent set once on a persistent handler. This led to deprecating #baseUrl on WASession, which I think makes sense anyway because it is the base url of the application that it returns in the first place.' id 'eb045055-57c2-424a-8a6e-6277ba03e124' date '29 September 2008' time '10:01:41 am' author 'jf' ancestors ((name 'Seaside-Tests-Development-pmm.3' message '- http://code.google.com/p/seaside/issues/detail?id=1- added test for SeasidePlatformSupport class >> #seasideInspectorClass' id '13cef22e-f20a-4a7d-b424-fc44bb3bbc81' date '28 September 2008' time '12:36:38 pm' author 'pmm' ancestors ((name 'Seaside-Tests-Development-jf.2' message 'add a test for the error handling mechanisms used by (not for the class itself) WADebugErrorHandler' id '147612da-fe26-8345-9e18-15b9aa5b54b7' date '19 September 2008' time '8:15:39 pm' author 'jf' ancestors ((name 'Seaside-Tests-Development-jf.1' message 'Rename Seaside-Development-Tests to Seaside-Tests-Development based on new package naming rules at: http://code.google.com/p/seaside/wiki/PackageNamingSee http://code.google.com/p/seaside/issues/detail?id=163Previous ancestor was:Name: Seaside-Development-Tests-lr.6Author: lrTime: 13 September 2008, 5:00:38 pmUUID: 38b7d758-35a6-4c24-9f5a-1dc50a9d2349Ancestors: Seaside-Development-Tests-MAD.5, Seaside-Development-Tests-lr.5' id '67cd424a-42cf-9b4a-b8c8-84ba38a316fe' date '17 September 2008' time '1:16:55 pm' author 'jf' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())