(name 'Seaside-Session-pmm.189' message 'Add #initializeCache- fixes #937' id '432438e2-e031-0d00-bf34-e0fa08ef9e65' date '10 September 2018' time '9:17:15.004251 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.188' message 'Add EnterpriseAuberginesStrategy- #890' id '503dc0ab-1d15-0d00-95a0-f6900511125a' date '9 September 2017' time '8:37:56.976199 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.187' message 'Clear sessions does not work on Pharo 4 - Seaside 3.2 #864- https://github.com/SeasideSt/Seaside/issues/864- simplify code' id 'e0e303c6-730b-49fc-bf7f-a3bce4533dda' date '21 August 2016' time '5:15:20.959547 pm' author 'pmm' ancestors ((name 'Seaside-Session-JohanBrichau.186' message 'Fix for when a session is cleared during request processsing. WASession>>basicUrl does not protect against the case where it''s the root request handler. Applying the same fallback as the code WARequestHandler>>basicUrl.See more at https://github.com/SeasideSt/Seaside/issues/864' id '5a0ac26c-0204-412d-b3df-1afb88014daf' date '16 April 2016' time '11:31:28.19438 am' author 'JohanBrichau' ancestors ((name 'Seaside-Session-JohanBrichau.185' message 'Fix for when a session is cleared during request processsing. WASession>>basicUrl does not protect against the case where it''s the root request handler. Applying the same fallback as the code WARequestHandler>>basicUrl.See more at https://github.com/SeasideSt/Seaside/issues/864' id '977ea2b9-6f4a-4b7e-b4fa-087d19e30f02' date '16 April 2016' time '10:39:33.58482 am' author 'JohanBrichau' ancestors ((name 'Seaside-Session-pmm.184' message '- #851 WASession >> #unregister does signal an error' id 'd2483266-2429-4139-bed4-cff994c298b3' date '21 July 2015' time '10:49:44.143448 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.183' message '- empty merge commit' id '432f5453-0e87-4e0d-9e98-cd71a55512a2' date '16 July 2015' time '4:43:09 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.182' message '- lint fixes' id 'f8c84ade-c710-4061-9176-e9715db70d80' date '16 July 2015' time '4:26 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.181' message '- session cache plugability for GemStone/S' id 'dd2ea847-c629-43a0-9c68-2d1970c043b7' date '14 July 2015' time '10:54:25.605174 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.180' message '- more specific caches' id 'fb075492-2b94-4275-b0f5-7b9a6457fb84' date '14 July 2015' time '9:33:49.73473 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.179' message '- lots of fixes' id 'af22b5b5-cac3-427d-88b9-9fffbc25e743' date '13 July 2015' time '11:53:55.009511 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.178' message '- lots of fixes' id '59211a3a-c0e8-423c-ad16-945d2529bf1d' date '12 July 2015' time '7:20:28.594491 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.177' message '- lots of fixes' id '6e3b464e-05d4-419d-907a-0920aa889984' date '12 July 2015' time '5:42:15.821956 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.176' message '- lots of fixes' id 'a97ee57c-a996-49eb-a366-a1db178d2f0f' date '12 July 2015' time '5:00:47.570388 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.175' message '- empty merge commit' id 'be57685e-8eb1-47d0-a343-1c36e260ad35' date '12 July 2015' time '4:03:40 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.174' message '#262 Creating a new session is O(n)- merge new cache implementation' id '333d8aa3-14a9-45d5-a11f-93c81da00c0c' date '12 July 2015' time '3:57:40 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.172' message '- lint fixes' id '5a216ad8-ff5f-44e9-b1c7-0381b9b2ae2c' date '19 August 2014' time '11:21:10 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.171' message 'Issue 796: 	Add support for Forwarded header' id 'ebacc65c-755e-42f7-a148-70612322bc58' date '16 August 2014' time '5:15 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.170' message '- add comment' id 'a6080052-1363-49e4-9a0f-5a4da40f8308' date '16 August 2014' time '10:30:08 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.169' message '- update comment to reflect reality' id 'd2926f43-665f-4113-9e17-edb762e9d580' date '1 August 2014' time '5:19:19 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.168' message 'Issue 749: 	Wrong handling of urls encoded in UTF8http://code.google.com/p/seaside/issues/detail?id=749' id '47344f9c-0425-4301-b66c-6737ba813015' date '8 September 2013' time '4:30:05 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.167' message '- Slime fixes, mostly recategorizations' id '78267d22-8bf5-466a-bc93-0d2d0c2cb7d3' date '3 September 2012' time '4:39:30 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.166' message '- formatting Nazis from outer space' id 'f572f786-306f-4128-83c6-48faaf0492bc' date '1 September 2012' time '5:16:19 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.165' message '- merge 3.0 trunk' id 'd2aedd88-fd00-4a43-b75e-26d5a7497103' date '29 March 2012' time '7:33:27 pm' author 'pmm' ancestors ((name 'Seaside-Session-jf.164' message 'http://code.google.com/p/seaside/issues/detail?id=713The circular dependency was introduced by Seaside-RenderLoop-pmm.78, Seaside-Session-pmm.160, and Seaside-Tools-Core-pmm.21.Revert those, and instead fix the failing tests in Seaside-Tests-Session by introducing a WANullSessionContinuation and making it the default. These tests should not be relying on renderloop behaviour in any case.The failing tests in Seaside-Tests-Tools-Web were fixed by adding a method to WAAdmin, allowing them to properly register an application through WAAdmin rather than duplicating (incorrectly) some of its functionality within the test.' id '890b41e0-acf3-4eb0-8fb6-fd7da75fb1da' date '13 March 2012' time '12:43:59 pm' author 'jf' ancestors ((name 'Seaside-Session-pmm.163' message '- Issue 709:	move document handlers to session- http://code.google.com/p/seaside/issues/detail?id=709' id '2a674246-f991-4eb6-ad80-8fe40bf0be8d' date '18 February 2012' time '1:52:33 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.162' message '- Issue 709:	move document handlers to session- http://code.google.com/p/seaside/issues/detail?id=709' id '9a2d9eed-fbb6-4898-bff6-96768e3e8e1e' date '18 February 2012' time '1:40:46 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.161' message '- Issue 111: 	jumpTo instance variable on WASession- move #jumpTo from session to action continuation' id '06d429fc-3c3a-4a89-9f1e-04bbba842154' date '27 August 2011' time '5:38:57 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.160' message '- make tests pass' id '3c44013b-dd4f-4cb3-8612-7100fbdb5837' date '25 August 2011' time '4:33:54 pm' author 'pmm' ancestors ((name 'Seaside-Session-jf.159' message 'Issue 681: Get rid of WAMain and its subclasses by instead specifying an initial continuation for use by an application. The code from WARenderLoopMain was moved to a new class called WAInitialRenderLoopConfiguration.http://code.google.com/p/seaside/issues/detail?id=681' id '337ded72-2d8e-4038-9462-c710b3c051d8' date '24 August 2011' time '2:16:03 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.158' message 'Get rid of lazy initialization in session continuations' id '4fcca6b9-39c9-4bd4-b7e2-f7a40cf4ee6c' date '23 August 2011' time '4:35:38 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.157' message 'Make session continuations into request handlers. They basically were anyway, but this standardizes their protocol. It also has the benefit that they''ll end up in the handler stack, which means we can get at the current continuation, which I think will prove useful shortly...' id '50daaa55-2375-411b-9622-9b98c7d69ee2' date '23 August 2011' time '2:35:34 pm' author 'jf' ancestors ((name 'Seaside-Session-pmm.156' message '- class comment improvement' id '686c9e2c-9f68-45ec-8acd-1238ab940481' date '18 August 2011' time '12:15:25 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.155' message '- Issue 592:	investigate tracking sessions by SSL session id- add new SSL session tracking strategy' id 'de0e66c6-e410-4c17-ba07-db65b5aa7005' date '14 August 2011' time '12:45:40 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.154' message '- remove deprecated methods and classes' id '84a35efb-de89-4aab-b909-2fbc7d60cd9c' date '2 August 2011' time '9:09:05 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.153' message '- merge with trunk' id '7dbbc031-d7b6-42c0-9b96-94438bff88dd' date '1 August 2011' time '9:00:42 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.152' message '- bump new crawler strategy' id '3b9372ce-ee6a-4ec4-8d63-67059829e250' date '24 July 2011' time '9:43:27 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.151' message '- fix configuration' id '0bc8accf-fab5-4ce5-a198-a2fe78baac96' date '24 July 2011' time '1:41:57 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.150' message '- Seaside-Session-pmm.149 with new UUID' id 'dd1878f4-548e-406e-be91-e5e4a91a0f67' date '23 July 2011' time '8:58:21 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.140' message '- move the whole prefetch handling to a dedicated method- explain prefetch handling' id 'c1d30608-28d5-a4b5-20ba-07b5a46c1508' date '20 June 2011' time '9:15:06 pm' author 'pmm' ancestors ((name 'Seaside-Session-NickAger.139' message 'fix for http://code.google.com/p/seaside/issues/detail?id=659when request isPrefetch, WAApplication>>handleFiltered: DNUs with WAResponseGenerator>>doesNotUnderstand: #statusForbidden. ' id 'ad79427b-c248-4194-8c18-8207969a74a7' date '20 June 2011' time '3:51:59 pm' author 'NickAger' ancestors ((name 'Seaside-Session-pmm.138' message '- backport of Seaside-Session-lr.137 without Seaside-Session-as.136' id '5012b5d9-ea28-4914-85a0-6f5b90b410b6' date '23 April 2011' time '2:32:15 pm' author 'pmm' ancestors ((name 'Seaside-Session-lr.135' message '- seaside applications should never respond to prefetch requests' id '07b0af88-64b7-4bcb-8778-d14e448dddd9' date '7 March 2011' time '6:53:50 pm' author 'lr' ancestors ((name 'Seaside-Session-pmm.134' message '- fix typo' id 'ea443192-609e-4925-a334-76ece1559243' date '20 August 2010' time '6:42:33 am' author 'pmm' ancestors ((name 'Seaside-Session-pmm.133' message '- Issue 594: #style methods don''t work then session cookies are enabled- http://code.google.com/p/seaside/issues/detail?id=594' id '20c413c9-f088-4b94-a361-6496656cd575' date '13 August 2010' time '2:02:55 pm' author 'pmm' ancestors ((name 'Seaside-Session-jf.132' message 'Add a "deprecation" (really an error) for WASession>>returnResponse:' id '49e7dff3-2a04-4c19-a4ac-acce53f54bf5' date '28 May 2010' time '7:45:46 pm' author 'jf' ancestors ((name 'Seaside-Session-pmm.131' message '- Issue 569: Encoding information doesn''t get included in the response- http://code.google.com/p/seaside/issues/detail?id=569- read encoding from codec in context instead of handler' id '75ab4a6f-5e10-4e69-a182-5376946eb1a7' date '26 May 2010' time '9:46:31 pm' author 'pmm' ancestors ((name 'Seaside-Session-jf.130' message 'remove code that tested for field values being collections (they no longer will be)' id 'c9475344-013d-4f1b-ac08-cdebef375a67' date '22 February 2010' time '12:20:05 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.129' message '- added explicit repository url' id '7983a6a8-f918-4adc-a616-f23faf818ac6' date '17 February 2010' time '3:50:45 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.128' message 'Bring WAUrl terminology in line with RFC 3986 (I got distracted on this while trying to work on fixing multiple fields with the same key).Leave old methods there marked as deprecated.' id '95e12112-092c-4e77-a8e8-77beaedbd0b2' date '15 February 2010' time '2:51:50 am' author 'jf' ancestors ((name 'Seaside-Session-jf.127' message 'Push WASession>>unregister up to WARequestHandler' id '11af130b-694c-4a94-9eeb-896a9462ced2' date '5 February 2010' time '4:33:40 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.126' message '- do not use any longer #printOn: and #printContentOn: in JSObject, but use #javascriptOn: and #javascriptContentOn:- implementors of external libraries that implment or send any of these methods need to perform the renaming as well' id '2a6f7345-efae-47e1-9dc5-339ab493712d' date '24 December 2009' time '11:24:20 am' author 'lr' ancestors ((name 'Seaside-Session-dkh.125' message '- fix Issue 491: http://code.google.com/p/seaside/issues/detail?id=491' id 'b594311a-ac9f-4099-bfdc-a99c055cc38a' date '18 November 2009' time '3:42:19 pm' author 'dkh' ancestors ((name 'Seaside-Session-jf.124' message 'Deprecate now-confusingly-named WARequestHandler>>baseUrl in favour of #url' id '96ff64fb-4517-4692-aa5a-c2ca483a2087' date '3 November 2009' time '1:24:58 am' author 'jf' ancestors ((name 'Seaside-Session-jf.123' message 'add UrlAttribute type and use it for #resourceBaseUrl' id '078c1e58-2e88-4a4a-b12b-f9c856b20586' date '3 November 2009' time '12:31:12 am' author 'jf' ancestors ((name 'Seaside-Session-jf.122' message 'Rename Seaside-Platform to Grease in order to help make clear that it is not Seaside-specific and can be used by other projects as a compatibility layer. This was spawned by discussions when I started porting Magritte to VAST using the Platform layer.' id '6d76cb1f-d731-4f8a-b935-1e930a929745' date '30 September 2009' time '10:53:38 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.121' message 'Instead of asking our parent for the basePath and then building the baseUrl from that, ask our parent for the baseUrl. This means the parent can do more than add path elements in defining our URL and allows, for example, the Registry to add the URL key itself, rather than forcing the session to do so. The basePath is easily taken from the baseUrl.' id 'e0d48d29-0a9e-4192-8d1d-9b3789e608d1' date '29 September 2009' time '11:24:36 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.120' message 'Merge WAEntryPoint in WARequestHandler' id '6175f211-fa9d-489b-84de-8e717e5aff5b' date '27 September 2009' time '10:07:03 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.119' message '- according to Julian it is "anHtmlRoot" and "aUrl", so made that consistent across the complete codebase- remove the #update*: methods from WAApplication' id '018d7c07-1f8e-48ca-81a8-4ec60a5ec3d3' date '8 September 2009' time '1:04:07 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.118' message '- fixed typo: anHtmlRoot -> aHtmlRoot- made #updateRoot: in WAApplication and WASession empty again, but make sure they get called' id 'e550a44a-b463-4cc5-9b36-70ab6f7ecdd2' date '8 September 2009' time '10:36:50 am' author 'lr' ancestors ((name 'Seaside-Session-lr.117' message '- call #updateRoot: and #updateUrl: on WASession and WAApplication' id 'f0f284f2-f17c-45f5-8c88-9b09797958ce' date '8 September 2009' time '10:27:38 am' author 'lr' ancestors ((name 'Seaside-Session-dkh.116' message '- merge' id 'e5d1888c-19ec-4c50-a611-177b0fc7029d' date '4 September 2009' time '9:57:52 am' author 'dkh' ancestors ((name 'Seaside-Session-dkh.115' message '- see http://code.google.com/p/seaside/issues/detail?id=416' id '37f5c95d-1e78-4d59-919b-e9de029bb920' date '4 September 2009' time '6:58:33 am' author 'dkh' ancestors ((name 'Seaside-Session-pmm.114' message '- replace tab with space' id 'fa0692ba-0dbf-4bab-88f9-ace2546b37ce' date '31 August 2009' time '2:48:31 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.113' message '- Issue 437:	WASession >> #updateRoot: should do any HTML- http://code.google.com/p/seaside/issues/detail?id=437' id '6480e4e0-523f-4671-9bf7-3103ce973340' date '30 August 2009' time '3:23:01 pm' author 'pmm' ancestors ((name 'Seaside-Session-jf.112' message 'http://code.google.com/p/seaside/issues/detail?id=413Move the setting of WACurrentRequestContext into WARequestContext>>push:while:This removes the need for each Request Handler (currently Session and RSSHandler) to do so itself.' id '16b03f99-d690-4a14-8994-9162ac8ab753' date '24 July 2009' time '11:13 am' author 'jf' ancestors ((name 'Seaside-Session-lr.111' message '- Added WARequestContext>>#respond: and use it whenever possible:	self requestContext respond: [ :response |		response			contentType: WAMimeType textPlain;			nextPutAll: ''Hello World'' ]		- This change reduces the code size (no temps need to be declared anymore) in most cases and simplifies request handling significantly. Credits go to Julian.' id '360588c9-f06e-4fd7-af44-734f41398d7b' date '20 May 2009' time '8:42:08 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.110' message '- don''t call #updateUrl: for callback URLs used in the rendering pass' id '9738e548-ea38-4ef9-a099-2936f5b62e37' date '8 March 2009' time '10:58:27 am' author 'lr' ancestors ((name 'Seaside-Session-lr.109' message '- fixed various lint issues' id '18d2a1f2-1948-4b0e-a0aa-6d69054f50c7' date '5 March 2009' time '9:17:48 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.108' message 'oops... good thing lukas was watching the changelogs like a hawk' id '4e5937f4-7ac0-48cd-bf59-eafb22a285af' date '4 March 2009' time '1:51:24 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.107' message 'Mark WARequestHandler>>filter as private' id '7a9dbdd2-bf14-41b3-a6cf-27381e6e622b' date '4 March 2009' time '1:39:19 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.106' message 'default #mainClass to WAMain.This makes an otherwise-unconfigured Application return an empty response, which makes testing a lot easier.' id '73af03c2-c4d4-4b3b-85f0-7038bf9937e1' date '4 March 2009' time '12:27:32 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.105' message 'Remove dependency of WAExceptionFilter on Session and move it into the Core package. Have it store its own configuration.Still no UI for actually configuring it but I''ll do that next. In the meantime, Applications added with WAAdmin will have a new named configuration added to the filter so that can be used to change the exception handler for *all* applications.You''ll need to clear  your config cache and reload your applications after loading this.' id '0a0c8466-be83-44d4-b193-2486b17315ef' date '4 March 2009' time '11:14:41 am' author 'jf' ancestors ((name 'Seaside-Session-jf.104' message 'let''s stop pretending the Session has any configuration on it...' id 'c0cda7f1-df5f-431b-bb1c-11f9a1ad4087' date '4 March 2009' time '9:58:22 am' author 'jf' ancestors ((name 'Seaside-Session-lr.103' message '- fixed various slime/lint issues that went unnoticed so far because of a bug in the refactoring engine' id 'c6ddf2d8-99bc-4d1d-90d5-9bf6d1a8568c' date '28 February 2009' time '11:19:18 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.102' message '- renamed #responseFactory to #responseGenerator- renamed WAResponseFactory to WAResponseGenerator- commented WAResponseGenerator, WAHtmlResponseGenerator' id '3a9fe6f9-bc3a-4a50-871b-77f54308607e' date '20 February 2009' time '11:19:08 am' author 'lr' ancestors ((name 'Seaside-Session-jf.101' message 'Add a property dictionary to SessionWe now have:- Request-scope properties (WARequestContext)- Renderloop-iteration-scope properties (WARenderContext)- Session-scope properties (WASession)' id '93b1f9c4-bb36-4f7e-8e31-4fe944486fd8' date '20 February 2009' time '9:54:51 am' author 'jf' ancestors ((name 'Seaside-Session-lr.100' message '- #redirectWithMessage:delay: should take a duration, not a number as second parameter' id '9adf610a-11ba-40a1-956f-1e3b1c263dbb' date '15 February 2009' time '10:18:13 am' author 'lr' ancestors ((name 'Seaside-Session-jf.99' message 'cleanup dependencies between Session, Component, and Core a bit:- moved two vistors from Component to Core (they work with all Painters)- moved WASnapshot to Core (if desired, it could live in a separate package, Seaside-State or something, that Session and Component depend on)' id '773ebaa1-130c-9c47-b56d-228fea2828c9' date '9 February 2009' time '4:49:31 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.98' message 'Pull mutex code out of WAMutualExclusionFilter into new WAMutex. This allows WACache to use it as well, which should help prevent deadlocks if any of the plugins try to do something to the cache while handling a notification.' id 'eb297d5e-d477-4838-892f-e8b745dc6a0b' date '5 February 2009' time '1:05:18 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.97' message 'Invalid use of deprecated API protocol.' id '8f6b3837-010c-4cd7-af75-5d764dd27b88' date '3 February 2009' time '9:09:25 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.96' message 'Get rid of WARequestContextRequest now that WACurrentRequestContext is a dynamic variable again.Also add tests for methods on WAObject, including #initialize being called, #error:, and #requestContext' id '9a4722bd-3cf9-4ccf-9dc4-8eaf3440cfc6' date '3 February 2009' time '5:22:33 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.95' message 'Get rid of Process-related stuff that was necessary before partial continuations (ProcessMonitor, ProcessVariable, etc). I''ve put all that stuff in a package called Seaside-ProcessHacks for posterity.I also split the continuation-related tests from WACurrentSessionTest out into WACurrentSessionContinuationTest and put it in Seaside-Tests-Flow but I''m not even certain whether the tests are relevant anymore (see http://code.google.com/p/seaside/issues/detail?id=309 )' id '5acdf007-368d-4de9-be8c-eb983ea6e437' date '3 February 2009' time '2:41:03 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.94' message 'Fix remaining circular dependency by making copying RenderContexts properly copy their visitor chain.Also add missing WARequestContext>>registry method and move WARequestHandler''s #isApplication and #isSession into the Seaside-Session package.' id '48621df3-cff7-4fdb-94ee-598da1a3e25a' date '1 February 2009' time '11:15:08 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.93' message 'Get rid of WASessionConfiguration. It really makes no sense to have it separate from WAApplicationConfiguration (not sure what I was thinking) and there''s almost nothing left in there (and more probably to be removed shortly).You may want to run the following as I found some obsolete libraries lingering in my Application Defaults:WASharedConfiguration configurations do: [ :ea | WASharedConfiguration unregister: ea ]You also want to execute the following after loading (whether you run the above or not):WAAdmin clearConfigurationCachesWAAdmin reloadApplications' id 'c6b85f88-4066-444d-8344-24ce32a26de8' date '30 January 2009' time '5:54:23 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.92' message 'cleanup some method categories' id '70be2b0d-106f-408d-8a13-3ced22a2dbfa' date '30 January 2009' time '5:15:09 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.91' message 'tidy up deprecations a bit' id '4ef0f76a-03b3-4d27-9bc8-dbeed3ad961a' date '30 January 2009' time '5:01:54 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.90' message 'This came out of and fixes http://code.google.com/p/seaside/issues/detail?id=304Move cookie handling behaviour from Application/Session to Registry (including full unit tests!).Also make WARegistry non-abstract so it can be used directly in cases where you want to store a dynamic collection of handlers (it will return a 404 in response to a default request with no key).You will need to clear your configuration cache and reload applications after loading these versions.' id 'ed0082b9-7dec-44b8-a5cb-abebd106db6c' date '30 January 2009' time '4:19:24 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.89' message 'session package no longer depends on continuations' id '3f55be9a-ab1d-44e7-9dc4-97062f0eac77' date '27 January 2009' time '2:29:30 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.88' message 'move platform-specific part of Flow into a Platform method called #suspendCallbackDo: and resolve dependencies from other packages on WAContinuation to use it instead.There is one remaining test class in Seaside-Session that is still using WAContinuation directly (see http://code.google.com/p/seaside/issues/detail?id=309)' id '60386168-baaa-404b-a5b4-2662d481c624' date '27 January 2009' time '1:30:38 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.87' message 'No need to use the EscapeFilter when not using the MonitorFilter. In fact, those two filters should really be combined: they''re useless without each other.' id 'ddc79e42-465f-4eea-b031-ea9eb747ff31' date '25 January 2009' time '12:29:18 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.86' message 'Commit WAMutualExclusionFilterAs far as I can tell, this filter is portable.It is a replacement for WAMonitorFilter when using partial continuations, as it does not create a new process but just prevents multiple processes from entering.' id 'c7867e5c-5d6c-4af1-814a-6e371f58eb9b' date '25 January 2009' time '12:22:38 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.85' message '- some lint fixes' id 'aacadb0d-5891-4c44-8dd4-37deab61fb0b' date '25 January 2009' time '12:14:49 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.84' message '- fixing some lint issues' id 'ece37695-4f5d-4aed-8d5c-063b82a50b41' date '25 January 2009' time '12:11:03 pm' author 'lr' ancestors ((name 'Seaside-Session-pmm.83' message '-  no more redirects for testing and setting the session cookie- session key are always Strings, no need to send #seasideString' id '316e4c60-25da-4bb7-8943-f10bacc44e62' date '24 January 2009' time '10:43:36 am' author 'pmm' ancestors ((name 'Seaside-Session-jf.82' message 'remove WASession>>returnResponse:it can no longer be considered deprecated since there is no alternative implementation' id '24379819-3001-404d-ac6f-0576352d9f44' date '23 January 2009' time '4:35:17 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.81' message 'Move load script functionality from yucky implementation on RequestContext/RenderPhaseContinuation to HtmlDocument.This removed the need for yucky #rememberLoadScripts: method as well.I also fixed the two users of PrettyPrintedDocument (WAHalo and JQAllTests) so they work correctly.One RSS test is now failing because it was using HtmlDocument for XML and there is now Html-specific behaviour (scripts) on there. I think this finally requires introduction of a WADocument class. I''ll look at this next.There''s also one other issue remaining: the <script> block needs to *always* be output even if there are no load scripts and the RenderLoopContinuation is still attaching the "onload" attribute to the body.' id '5d230aa8-61ae-49f4-a216-52beadefc451' date '23 January 2009' time '3:48:37 am' author 'jf' ancestors ((name 'Seaside-Session-jf.80' message 'As debated at the Konstanz sprint and touched upon in http://code.google.com/p/seaside/issues/detail?id=221, move Platform methods to instance side and implement WASqueakPlatform as a subclass of WAPlatform.This allows us to provide default implementations where possible, helps document which methods are required, and means that we have a class as our global instead of the un-namespace "SeasidePlatformSupport".In case it is useful, the refactoring code was:"The refactoring:"WASqueakPlatform class selectors do: [ :ea |	(ORSwapMethodRefactoring		swapMethod: ea		in: WASqueakPlatform class) execute ]"The renaming:"(ORSourceRegexRefactoring new	replace: ''SeasidePlatformSupport'' with: ''WAPlatform current'';	yourself) execute' id '21f10e77-ca2f-4a5e-8cdf-f51b1c7ca1bc' date '22 January 2009' time '3:00:55 am' author 'jf' ancestors ((name 'Seaside-Session-jf.79' message 'avoid restoring continuation state right after capturing it by providing a #basicValue method that is used by #value and also by new #captureAndInvoke' id 'b71f175b-fdb9-497c-9d2a-c02a0caa491e' date '21 January 2009' time '2:53:58 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.78' message 'commit alternate version of WASessionContinuation>>captureState that matches Seaside 2.8 behaviour so that we have it recorded. Comments are included outlining the two implementation options. Further discussion is required (probably on the mailing list) to determine which is the "better" behaviour.' id 'c9b4ec2c-5d8b-4056-b092-2eda01061a0a' date '21 January 2009' time '2:14:56 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.77' message 'fix redirection methods on request context' id 'b9518c70-f6a5-41b1-a7ee-d7de198670f0' date '21 January 2009' time '11:00:06 am' author 'jf' ancestors ((name 'Seaside-Session-jf.76' message 'rename WASessionContinuation>>updateStates to #captureStates. It isn''t supposed to be *updating* anything, just taking a full snapshot of everything that should be captured.' id 'b531d66b-bc84-4a47-b6ce-41c07b5300a5' date '21 January 2009' time '10:05:39 am' author 'jf' ancestors ((name 'Seaside-Session-lr.75' message '- initialize the states variable lazily as half of the time it is overridden anyway- added a #reset method to WASnapshot' id '8fc3a933-546b-43e0-b76f-c0f31385ae00' date '19 January 2009' time '11:14:37 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.74' message '- removed a random #snapshotStates' id '94032e03-81f9-4f70-aa86-da2ee263d8fa' date '19 January 2009' time '7:21:40 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.73' message '- renamed #return to the more specific #respond to return a response' id '9385eeac-fcc8-483c-a35a-1b6137605e74' date '19 January 2009' time '6:32:09 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.72' message '- merged back into main trunk' id '8708be3e-27e9-4f9d-9627-b8758f831264' date '19 January 2009' time '6:02:52 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.response.71' message '- merged back into main trunk' id '31eb9185-7c1a-49bd-a6be-8f847a781ef0' date '19 January 2009' time '6:02:15 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.response.70' message 'Some refactoring' id '3c4c8421-5180-4ddc-8b50-80229f54c1b0' date '17 January 2009' time '12:45:33 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.response.69' message '- The response is set-up by the server adaptor and stored in the request context. Nobody is supposed to create new response objects. This should work for Swazoo and Kom, but not for the listener yet. A refactoring of WAResponse is still pending.- The request context is the only instance responsible to return a response factory (it asks the closes handler for one or provides the default one).- The implementation of the response factory changed slightly: Use something along "aRequestContext responseFactory notFound; return" to generate and return a response.- #handle: and #handleFiltered: do not return anything anymore, but throw WAResponseNotification to signal that they have generated a response. Use "aRequestContext return" to do that.- aRequestContext onRespond: aBlock does not exist anymore. Instead use an [ ... ] ensure: aBlock to define post response actions.' id '8edc1bd7-0985-4d19-bd10-22f8a48e1fa6' date '12 January 2009' time '9:18:16 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.68' message '- renamed on WARequestHandler and WARequestFilter the methods #handleRequest: to #handle: and #responseForContext: to: #handleFiltered: (for the upcoming response refactoring)' id 'b998a95d-d253-447b-b1b8-d49ee58a2b2b' date '11 January 2009' time '9:44:04 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.67' message 'http://code.google.com/p/seaside/issues/detail?id=212Deprecate WASessionContinuation>>url and rename it to #registerForUrl' id '64b0a40d-6b34-424d-bb0d-9a8b3feb6c92' date '11 January 2009' time '5:46:36 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.66' message 'http://code.google.com/p/seaside/issues/detail?id=183Deprecate WAApplication>>description and stop it getting its root component description. The method still exists on the class-side.I also did not remove the class-side #description method from Components. It is still used by the example browser, though not anywhere much else. But the configuration application could decide to show it if desired.' id 'ced38611-2cee-4565-b444-8ba25c10bbca' date '11 January 2009' time '5:16:23 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.65' message 'pull cache creation on Session out into a method so subclasses can change the way it is done' id '965efdc9-6f8b-4e8f-a7de-3c07d8009425' date '10 January 2009' time '7:24:42 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.64' message '- meged WALibrary into WAFileLibrary' id '7bd889be-c2d1-488a-b8dd-84b7a29ad1f1' date '10 January 2009' time '3:31:02 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.63' message '- #ifTrue:ifFalse:, #and:, #or: expect a literal block' id 'eea3d559-b79f-4e8f-99a4-100d04411933' date '7 January 2009' time '1:49:05 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.62' message '- added an advanced property to attributes' id 'c70e6415-bc9d-42eb-9733-6229ed4b80bb' date '2 January 2009' time '9:19:02 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.61' message '- added slime rule to detect invalid or incomplete senders of #seasideDeprecatedApi:details:- fixed callers of #seasideDeprecatedApi:details:' id '68073126-e447-4e77-ab57-4a7272bce555' date '30 December 2008' time '1:01:41 pm' author 'lr' ancestors ((name 'Seaside-Session-pmm.60' message '- check for supported HTTP methods in WAApplication' id '902f016b-f8d8-455f-8c94-1df13c9f83a4' date '30 November 2008' time '4:14:26 pm' author 'pmm' ancestors ((name 'Seaside-Session-lr.59' message '- cleanup of method protocols- fixed inconsistencies' id 'f52df5f4-3f71-4010-ba74-886aba012232' date '29 November 2008' time '2:13:35 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.58' message '- use ansi compatible exception handler' id 'e5fd882d-4454-4df8-b913-3d3c53daee3e' date '14 November 2008' time '11:46:02 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.57' message '- fixed comments' id 'fdbdfd43-59c6-4e80-9224-00df7e26460b' date '12 November 2008' time '8:22:45 am' author 'lr' ancestors ((name 'Seaside-Session-lr.56' message 'merged' id '633cca10-1922-4ede-9a61-8ac071b98408' date '12 November 2008' time '8:12:57 am' author 'lr' ancestors ((name 'Seaside-Session-jf.55' message 'http://code.google.com/p/seaside/issues/detail?id=227Reintroduce previous ExceptionHandler refactorings but with a few changes to satisy complaints in this issue:+ Most ErrorHandlers no longer catch Halts+ The only one that does is WAHtmlHaltAndErrorHandler, which is in a Squeak-specific package, which removes the need for the platform #haltClass method. This handler can be used or subclassed in production+ Code to resume WARequestContextNotFound was moved up to the top-level WAExceptionHandler so that stepping over #requestContext will work in a debugger, even when not using a DebugErrorHandler+ The text in the functional tests was updated to indicate that the results are handler- (and occasionaly platform-) specific' id '5c4fd140-95f3-b740-8436-df9415cdb624' date '12 November 2008' time '1:43:25 am' author 'jf' ancestors ((name 'Seaside-Session-jf.53' message 'http://code.google.com/p/seaside/issues/detail?id=227Apparently my exception handler refactoring broke many things in various ways. Revert everything back to the old error handler mechanism (adapted for changes to session and render loop).' id '3219790a-9de8-ad46-a8be-b4738b2a6ade' date '7 November 2008' time '11:02:41 am' author 'jf' ancestors ((name 'Seaside-Session-pmm.52' message '- merged' id 'c660e6d3-925c-4da3-8959-061f7ef0cd65' date '5 November 2008' time '2:18:45 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.49' message '- SLint fixes' id '57e6dc20-2d7b-4145-b97a-c6c83696fc66' date '5 November 2008' time '1:53:02 pm' author 'pmm' ancestors ((name 'Seaside-Session-jf.48' message 'When we detect that cookies are working, do an extra redirect to make sure the session key is not in the URL displayed in the Location bar.This is one extra redirect than with the old cookie check but I think this new implementation is still worthwhile because: + the code is simpler + we don''t have to check for the cookie field on *every* request for the life of the session + we don''t create and enter two sessions for every user who does not accept our cookie + the first URL the user sees does not have the _c in it' id '943b7cf8-d397-4441-ba02-c1c5f3b83506' date '28 October 2008' time '9:43:35 am' author 'jf' ancestors ((name 'Seaside-Session-jf.47' message 'I just realized that the new cookie check doesn''t even require the cookieCheckField at all. And without that, we can now just use #redirectWithCookie:.Ahh... simpler.' id 'c1688181-cfc6-664a-a3e4-6f402b65b59a' date '28 October 2008' time '9:37:19 am' author 'jf' ancestors ((name 'Seaside-Session-jf.46' message 'http://code.google.com/p/seaside/issues/detail?id=176Implement deprecated WASession>>expire method' id 'be122d35-e771-2640-9609-df7d528e2f3d' date '28 October 2008' time '12:25:06 am' author 'jf' ancestors ((name 'Seaside-Session-jf.45' message 'refactor WARegistry a bit so that WAApplication can provide a session key from a cookie without having to add a fake GET parameter.' id 'ce9af317-a2e9-5343-9258-3039143a4e7e' date '27 October 2008' time '11:57:25 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.44' message 'WAResponse>>deleteCookie: was depending on having a current request context and an EntryPoint in that context.It was being called from WAApplication when the first condition was not true and this was resulting in an error.I moved the code from #deleteCookie: into #deleteCookie:path:, which WAApplication can use, passing in the cookie path, and had #deleteCookie: attempt to get the path from the request context and pass it into the version that takes the path.' id '8e897973-4aa4-664c-93a7-8eb02250ad8b' date '27 October 2008' time '11:30:57 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.43' message 'There''s no need to #checkSessionCookie: on every request when #testSessionCookie is using #respondAndContinue:. We can do the test right after that call.' id 'e657c0b0-2526-0944-b16b-826d15d0d538' date '27 October 2008' time '11:28:17 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.42' message 'Gah... session checking still wasn''t working.Now I''m pretty sure it is. We actually check whether the key coming back from the cookie is the same as the one in the URL and we actually remember to set the cookiesEnabled instvar to true. :)' id '2c2c7f50-1395-0644-9353-9be06e992fbb' date '27 October 2008' time '9:50:19 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.41' message 'The existing cookie detection wasn''t working when users had cookies disabled because it wasn''t including the session key in the URL for the cookie check.Instead we initialize the cookiesEnabled instvar to false, use the #useSessionCookie preference to determine whether to run the test, and if the test is successful we set the instvar to true. WASession>>url uses the instance variable to determine whether to include the session key in the URL so it will always be included until we are certain that we want to use cookies and that the user supports them.' id '59b872f9-55da-064d-87e1-528e7e9fc8f7' date '27 October 2008' time '9:27:24 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.40' message 'fix cookie test and recategorize some methods' id '8dfc14da-703e-e043-b3a9-cc9d3704e4c3' date '27 October 2008' time '9:18:31 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.39' message 'http://code.google.com/p/seaside/issues/detail?id=213It was really annoying to have the Session automatically register itself in the Application. The caused weirdness when unregistering a session - the render phase would then cause the session to re-register itself under a new key.To fix this, WAApplication now registers the session when it is created and the session should not re-register itself.Added #keyFor:ifAbsent: and #urlFor:ifAbsent: as well as #keyFor: and #urlFor: which signal a WAUnregisteredHandlerError if the handler is not found. Change senders of #urlForRequestHandler:addHandlerField: and #ensureKeyForHandler: to use these new methods. The RenderLoopContinuations now catch this error and redirect to a new session. If you want to redirect somewhere else, you should call WARequestContext>>redirectTo: after unregistering the session.Also rename several methods on WARegistry to get a more consistent interface, both internally and with WADispatcher) and deprecate the old versions (plus changed senders).' id 'ee93af56-d1fa-954d-bb87-1cdbe7fdb3d0' date '27 October 2008' time '5:46:04 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.38' message '- updating package information' id 'd2e8081b-c365-447b-b1f1-52733e8fef98' date '23 October 2008' time '10:08:35 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.37' message 'Added my best guess at package dependency information (please fill in descriptions)' id '4c66d0c0-8d42-7d4a-a4a5-502fe3bc38f4' date '23 October 2008' time '12:40:15 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.36' message 'http://code.google.com/p/seaside/issues/detail?id=214Fix WARequestContextNotFound error when trying to terminate the session process.We don''t have access to the current request context when running this code so we can''t use WASession>>preferenceAt:' id 'f40ef9e1-3ea8-b14e-b6b5-6231d591a155' date '22 October 2008' time '9:55:26 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.35' message 'move WASession>>sessionCookie to private category' id '65382fa1-fd46-5e4d-8625-3852b94a931a' date '20 October 2008' time '12:27:52 am' author 'jf' ancestors ((name 'Seaside-Session-jf.34' message 'refactor process termination code out of WASession>>handleRequest:' id '0ac31f26-8de7-3149-9c59-02c385db103c' date '19 October 2008' time '3:44:41 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.33' message 'Everything called from WASession>>handleRequest: is now expecting to have the Request Context passed into it so we don''t need to define WACurrentRequestContext there. We move that code instead to #responseForContext:, which is the point at which we start calling code without passing along the RequestContext.' id '3f20c2fc-c1da-3e4d-9ad1-f4445c6b9732' date '19 October 2008' time '3:40:04 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.32' message 'Change exception handlers to get instantiated with the request context. They should be useable outside of WASession, where WACurrentRequestContext is not currently defined and even if used within the session, it''s a bit sketchy having your error handling dependant on process variables (WADebugErrorHandler already was having to store the request context anyway)' id '1636c3b2-9452-ce42-9ad2-394bf89f15fc' date '19 October 2008' time '2:41:02 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.31' message 'http://code.google.com/p/seaside/issues/detail?id=208Change session continuations and sessions request handling methods so they use #currentRequest (most cases) or at least get passed a RequestContext instead of of a Request.Specifically:Change WAMain>>start: to #startChange WASession>>start: to #startChange WASession>>unknownRequest: to #unknownRequestMove WASession>>performRequest: code into #responseForContext:Change WASessionContinuation>>handleRequest: to #handleRequestChange WASessionContinuation>>value: to #value' id 'd1253462-5220-ae47-9a87-262747b8c19e' date '19 October 2008' time '1:08:56 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.30' message 'remove unused session configuration options (they''re now part of WACache which is not yet configurable)' id '61cccef7-5d7b-cb47-9e1e-5d1ce0ce6216' date '18 October 2008' time '8:57:14 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.29' message 'http://code.google.com/p/seaside/issues/detail?id=100Cleanup responding and redirecting methods on WASession. Most went to WARequestContext and were deprecated on WASession (a few were renamed on the way). A couple were deleted.See the issue for details.' id '547bb339-f282-2041-8a8a-2a52a1455656' date '18 October 2008' time '6:28:38 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.28' message 'move WASessionContinuation from RenderLoop package into Session package' id '9ee13fcf-8e9a-314f-8bec-062670027a06' date '18 October 2008' time '11:34:19 am' author 'jf' ancestors ((name 'Seaside-Session-jf.27' message 'Move concrete #handlerField implementation on WAApplicationImplement WASession>>unregister' id '7d365dbe-da08-e941-8561-f41d5dbdcef9' date '7 October 2008' time '6:52:39 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.26' message 'categorize method' id '27547a7d-d483-3749-8785-af1dc408341b' date '7 October 2008' time '1:56:26 am' author 'jf' ancestors ((name 'Seaside-Session-jf.25' message 'remove WAStandardFiles from the default list of libraries to be included for all Applications. The contents of that library are specific to component and canvas libraries and do not necessarily apply to all Applications. The library can be added in the Environment package.' id 'bc694f0a-5fe7-5440-b581-30a42568d5bb' date '6 October 2008' time '9:44:09 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.24' message 'Implement proper copying behaviour for WACache, its plugins, and WASession and WARegistry which currently hold instances of WACache.http://code.google.com/p/seaside/issues/detail?id=178+ add private (for now) accessors for all the plugins on WACache (needed for testing, but also good practice)+ remove need for cache to be specified when initializing a cache plugin. It must however be set with #setCache: before being used. This allows passing in a configured plugin instance to WACache instead of a class and also makes it possible to change the cache instance variable after copying.+ Add test for WACache>>testCopy to test copy behaviour' id 'a2309386-49a7-dc4f-9eba-6970d060215d' date '5 October 2008' time '11:10:46 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.23' message 'Move "parent" instvar of WARequestHandler to WAEntryPoint.The instvar used to server double purpose as both the static parent of an entry point (set at registration time) and as a sort of request handler context stack (set during request handling on some error handlers). With the handler stack in WARequestContext that latter use is no longer required and the duality is confusing.This moves the instvar down to WAEntryPoint, where it is always a static parent set once on a persistent handler. This led to deprecating #baseUrl on WASession, which I think makes sense anyway because it is the base url of the application that it returns in the first place.' id '24535ecb-005a-bc4b-a029-013444908c4b' date '29 September 2008' time '10:00:58 am' author 'jf' ancestors ((name 'Seaside-Session-jf.22' message 'Move WASnapshot from RenderLoop to Session package.It is part of the session state saving mechanism and is expected to be passed into #updateStates: on WASession. It would be required if you were implementing another subclass of WAMain to use the session without a render loop.' id 'd45a7c18-fcbe-b54d-a71f-86d8ac7dfd1b' date '28 September 2008' time '10:37:19 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.21' message 'Move WAFilter>>updateStates: into the Seaside-Session package. The filter works just fine without this method when used in a non-session request handler and the method is only called by the Session (and when you have a session to manage state).' id '5b7f3b68-b9f6-d240-b9c8-630f9230a590' date '28 September 2008' time '10:07:08 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.20' message 'rename badly named temp variable' id 'ee334e5e-c832-f046-aeca-47713e441e17' date '28 September 2008' time '5:20:32 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.19' message '- makes the _k in the action url a string, so that it doesn''t break existing code' id '4ee8957c-fa31-462a-8316-fa4369f48738' date '25 September 2008' time '4:33:16 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.18' message '- experimental, do the session filter within the process monitor- process monitor should become a filter itself ;-)' id '3e2a7798-8e05-488b-84b7-7a4478f5038a' date '25 September 2008' time '3:36:12 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.17' message 'Updated deprecation senders' id 'f6135194-dd0a-354b-9bae-1851ac3d4d5e' date '24 September 2008' time '11:09:16 am' author 'jf' ancestors ((name 'Seaside-Session-jf.16' message 'merge' id 'd7d8d8d6-e95c-9743-aee3-76cbe9457547' date '23 September 2008' time '12:32:03 am' author 'jf' ancestors ((name 'Seaside-Session-jf.15' message 'Change WARequest>>url to return the complete URL from the original request. This required adding WAUrl>>decodeWith: to do decoding of most elements in the WAUrl.Also adjusted a bunch of users of #urlSee http://code.google.com/p/seaside/issues/detail?id=154' id '293c50d5-b0cc-e048-9c8d-36810f2fb0ab' date '23 September 2008' time '12:06:12 am' author 'jf' ancestors ((name 'Seaside-Session-jf.14' message '-Rename #toMimeType to #seasideMimeType-Add #seasideUrl to String and WAUrl-Add convenience creation methods to WAMimeType-convert senders of #toMimeType, WAUrl>>parsePath:, and WAMimeType class>>fromString: to new methodsThis addresses:http://code.google.com/p/seaside/issues/detail?id=155http://code.google.com/p/seaside/issues/detail?id=138' id 'f8591e76-e1fc-cc4e-9483-01ab8830f6de' date '22 September 2008' time '2:06:22 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.13' message 'Add WAExceptionHandler as a superclass of WAErrorHandler which can handle any kind of Exception.Change the protocol so that the exception handler itself is given the responsibility of registering exceptions it wants to catch and dispatching them to appropriate methods.WAErrorHandler, however, maintains the same protocol as before with the old methods marked as deprecated.This follows discussion in http://code.google.com/p/seaside/issues/detail?id=160' id '34cc7771-1c12-294c-837e-bdeff44493e9' date '17 September 2008' time '8:37:41 pm' author 'jf' ancestors ((name 'Seaside-Session-pmm.12' message '- changed error handler' id 'b1cb32a6-7b55-4dd4-ba8b-89b0c3b3b783' date '14 September 2008' time '4:01:28 pm' author 'pmm' ancestors ((name 'Seaside-Session-lr.11' message '- remove accessors for #rootClass and #rootDecorationClasses' id '5dfd070f-284f-4264-ac15-2e453e0ca7b2' date '14 September 2008' time '1:42:48 pm' author 'lr' ancestors ((name 'Seaside-Session-pmm.10' message '- moved page expired to Core' id '8daa8208-6f39-4adf-b57a-fb95094cc74e' date '14 September 2008' time '11:34:48 am' author 'pmm' ancestors ((name 'Seaside-Session-lr.9' message '- fixed another obsolete superclass' id '59e6e7ea-39cb-4392-929d-90c2a2fbd114' date '14 September 2008' time '11:05:14 am' author 'lr' ancestors ((name 'Seaside-Session-lr.8' message 'merged' id '00e8cef3-1bbe-4156-9e2d-ccf474699c7b' date '14 September 2008' time '9:54:07 am' author 'lr' ancestors ((name 'Seaside-Session-jf.7' message 'Move error handlers and the #withErrorHandler: and #withEscapeHandler: methods from Seaside-Session to Seaside-Core-RequestHandler.They aren''t actually currently used by anything other than Session, but there''s no reason they couldn''t be used by some request handler being implemented by a user.' id '13af3b9e-7d74-3441-aa8c-90e74b4a2de2' date '14 September 2008' time '2:06:21 am' author 'jf' ancestors ((name 'Seaside-Session-jf.6' message 'Remove direct creation of WAResponse in favour of using WAResponseFactory to get one.Also deleted WASession>>script: which Lukas says is replaced by WARequestContext>>rememberLoadScripts: and should have been deleted.' id '79acad4c-49f8-3947-a5ee-abb8df5ee9da' date '14 September 2008' time '1:00:47 am' author 'jf' ancestors ((name 'Seaside-Session-jf.5' message 'Remove straggling obsolete ttribute value override in session configuarion' id '9b0afb1f-d220-ef45-b87b-a5a88c9ea67d' date '13 September 2008' time '2:58:22 pm' author 'jf' ancestors ((name 'Seaside-Session-jf.4' message 'Refactor to combine WANotFoundHandler, WAExpiredKeyHandler, WARedirectHandler, and WAExpireSessionKeyHandler into one object, WAResponseFactory.WANotFoundHandler still remains as an actual handler because WADispatcher is written in such a way that it expects to always find a handler for a request, even if that is a "not-found" handler which just delegates the response generation to the factory.This will pave the way for moving the rendering code off of WAResponse and onto a subclass of the factory.' id 'ae6307bb-1892-f345-a994-d80b56256d6e' date '13 September 2008' time '2:55:44 pm' author 'jf' ancestors ((name 'Seaside-Session-lr.3' message '- #handleRequest:, #responseForContext: and all friends now get the request context passed in instead of the request' id '134375cb-bd0f-4759-824e-fd6d3f5b6611' date '13 September 2008' time '11:55:19 am' author 'lr' ancestors ((name 'Seaside-Session-jf.2' message 'Remove #decorationClasses configuration attributeThe only demaining decoration that makes sense to add generically or at the root level is the ToolDecoration and I''m not altogether convinced that couldn''t be implemented as a filter. And in any case, we can just add a configuration option specifically for the tool decoration.' id '4d0b78df-f833-7c41-946e-f594cba16144' date '13 September 2008' time '10:15:14 am' author 'jf' ancestors ((name 'Seaside-Session-lr.1' message 'Move session code frin Seaside-Core into its own package.Push #verifyPassword:forUser: up to WAEntryPoint.Move WAReturnResponse into Seaside-Core-Exceptions.' id 'd3186ba7-a49b-4b3c-a39f-2ac1be73ee55' date '12 September 2008' time '8:42:21 pm' author 'lr' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-pmm.7' message '- merged' id '158a51fa-80a7-463f-a2ed-839206a8b6b8' date '13 September 2008' time '5:16:22 pm' author 'pmm' ancestors ((name 'Seaside-Session-pmm.6' message '- moved #sesssion and #application methods here' id 'e54eeea2-0ea8-4c0a-803d-cfb89447d38b' date '13 September 2008' time '5:15:34 pm' author 'pmm' ancestors ((id '9b0afb1f-d220-ef45-b87b-a5a88c9ea67d')) stepChildren ())(name 'Seaside-Session-MAD.3' message '- added WASessionConfiguration to WAApplication>>defaultConfiguration to support multiple tests' id '0ac37716-81a3-11dd-9e90-000a95da90cc' date '13 September 2008' time '4:48:34 pm' author 'MAD' ancestors ((id '4d0b78df-f833-7c41-946e-f594cba16144')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-jf.cache.1' message 'Minor changes to WASession to bring it inline with the changes in Seaside-Core-jf.cache.1- Use WACache instead of WALRUCache- implement #responseForContext: instead of #incomingRequest:' id '748bf148-a8c8-8243-a82d-e16097a419c4' date '18 September 2008' time '10:56:12 pm' author 'jf' ancestors ((id '34cc7771-1c12-294c-837e-bdeff44493e9')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-lr.51' message '- move monitor, escape handler, error handler to filter' id 'b23e8a78-8046-49c0-a305-cbcb303e5f02' date '3 November 2008' time '9:59:46 pm' author 'lr' ancestors ((name 'Seaside-Session-jf.50' message 'send super in WASession>>postCopy' id 'd73d35ca-9ffa-a44c-ae74-1288856db3f0' date '3 November 2008' time '8:57:31 am' author 'jf' ancestors ((name 'Seaside-Session-jf.49' message 'http://code.google.com/p/seaside/issues/detail?id=229When WAActionPhaseContinuation redirected to the render continuation, this was not wrapped with a handler for WAUnregisteredHandlerError. If a callback expired the session and then immediately triggered a render notification we would end up seeing that error when trying to get the URL for the new Continuation.So we now add the handler in WASessionContinuation>>value and have it wrap the entired #handleRequest call.Also renamed the methods that add the exception handlers to end with "Do:"' id '650b76e9-e39f-244f-ad76-1a1ddb7ad390' date '3 November 2008' time '8:33:51 am' author 'jf' ancestors ((id '943b7cf8-d397-4441-ba02-c1c5f3b83506')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-jf.54' message 'http://code.google.com/p/seaside/issues/detail?id=204Moved responseStream from Request to RequestContext' id '17799fdc-b2bb-bf4d-9446-7d7afebedf38' date '9 November 2008' time '9:02:09 pm' author 'jf' ancestors ((id '3219790a-9de8-ad46-a8be-b4738b2a6ade')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-lr.79' message '- refactoring of the response hierarchy- added many new tests for response objects- WAResponse is now abstract and shouldn''t be used anymore- subclasses are WABufferedResponse and WAStreamedResponse- some tests remain broken at the moment- all server adaptors are broken, except the kom adaptor (it might need some cleanup though)' id '7e71403b-0116-4868-88a2-461c30cad0c2' date '21 January 2009' time '6:55:18 pm' author 'lr' ancestors ((id 'c9b4ec2c-5d8b-4056-b092-2eda01061a0a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-yann_monclair.115' message 'http://code.google.com/p/seaside/issues/detail?id=215http://code.google.com/p/seaside/issues/detail?id=445Move #charSet up from WAApplication to WAEntryPoint. Update senders and configurations accordingly.' id '59dc0d95-88a1-6549-94f9-3412cb91bb99' date '4 September 2009' time '5:51:02 pm' author 'yann.monclair' ancestors ((id 'fa0692ba-0dbf-4bab-88f9-ace2546b37ce')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ((name 'Seaside-Session-lr.137' message '- use forbidden (403) as a response to prefetch requests' id '8ecf77d3-5ec7-4ead-aae4-db9341455997' date '13 March 2011' time '7:05:30 pm' author 'lr' ancestors ((name 'Seaside-Session-as.136' message 'Issue 267: FileLibrary improvementshttp://code.google.com/p/seaside/issues/detail?id=267' id 'c5ca3370-a700-6642-a638-a6cb69720220' date '9 March 2011' time '11:55:12 pm' author 'as' ancestors ((id '07b0af88-64b7-4bcb-8778-d14e448dddd9')) stepChildren ())) stepChildren ())))) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-lr.142' message '- fixed formatting of return message' id '94c21d57-c22e-439e-940f-d40a2103dbca' date '25 July 2011' time '8:24:34 pm' author 'lr' ancestors ((name 'Seaside-Session-lr.141' message '- fixed spacing in blocks' id '9bb8b440-42f1-4132-a110-e768d7fb1df9' date '25 July 2011' time '7:20:17 pm' author 'lr' ancestors ((id 'c1d30608-28d5-a4b5-20ba-07b5a46c1508')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-pmm.157' message '- rename WAFileLibraryBase to WAAbstractFileLibrary' id '2355ed4a-4a91-406a-b805-20729d42de58' date '14 March 2012' time '8:07:31 pm' author 'pmm' ancestors ((name 'Seaside-Session-NickAger.143' message 'minor change caused by WAFileLibrary refactoring into WAFileLibraryBase and WAFileLibrary/WAFileMetadataLibrary.see http://code.google.com/p/seaside/issues/detail?id=267FileLibrary improvements' id 'bc68701e-b217-47d7-84aa-907a0e25ee26' date '9 March 2012' time '3:05:19 pm' author 'NickAger' ancestors ((id '94c21d57-c22e-439e-940f-d40a2103dbca')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-pmm.173' message '#820 Configurations should not hold on to classes' id 'a87045b0-e670-4a09-90e3-fb1c6f568fbc' date '12 July 2015' time '10:10:07 am' author 'pmm' ancestors ((id '5a216ad8-ff5f-44e9-b1c7-0381b9b2ae2c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Seaside-Session-JohanBrichau.182' message 'Introduced the indirection to create a mutual exclusion filter to accomodate the difference with Gemstone/S' id '7f0c09df-58fd-4f4c-bf48-6472ca916807' date '16 July 2015' time '4:05:36.463399 pm' author 'JohanBrichau' ancestors ((id 'dd2ea847-c629-43a0-9c68-2d1970c043b7')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())